
/opt/intel/sgxsdk/lib64/libsgx_urts.so:     file format elf64-x86-64


Disassembly of section .init:

00000000000007b0 <_init>:
 7b0:	48 83 ec 08          	sub    $0x8,%rsp
 7b4:	48 8b 05 25 08 20 00 	mov    0x200825(%rip),%rax        # 200fe0 <_DYNAMIC+0x1d8>
 7bb:	48 85 c0             	test   %rax,%rax
 7be:	74 05                	je     7c5 <_init+0x15>
 7c0:	e8 1b 00 00 00       	callq  7e0 <__gmon_start__@plt>
 7c5:	48 83 c4 08          	add    $0x8,%rsp
 7c9:	c3                   	retq   

Disassembly of section .plt:

00000000000007d0 <__gmon_start__@plt-0x10>:
 7d0:	ff 35 32 08 20 00    	pushq  0x200832(%rip)        # 201008 <_GLOBAL_OFFSET_TABLE_+0x8>
 7d6:	ff 25 34 08 20 00    	jmpq   *0x200834(%rip)        # 201010 <_GLOBAL_OFFSET_TABLE_+0x10>
 7dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000007e0 <__gmon_start__@plt>:
 7e0:	ff 25 32 08 20 00    	jmpq   *0x200832(%rip)        # 201018 <_GLOBAL_OFFSET_TABLE_+0x18>
 7e6:	68 00 00 00 00       	pushq  $0x0
 7eb:	e9 e0 ff ff ff       	jmpq   7d0 <_init+0x20>

00000000000007f0 <__cxa_finalize@plt>:
 7f0:	ff 25 2a 08 20 00    	jmpq   *0x20082a(%rip)        # 201020 <_GLOBAL_OFFSET_TABLE_+0x20>
 7f6:	68 01 00 00 00       	pushq  $0x1
 7fb:	e9 d0 ff ff ff       	jmpq   7d0 <_init+0x20>

Disassembly of section .text:

0000000000000800 <deregister_tm_clones>:
 800:	48 8d 05 30 08 20 00 	lea    0x200830(%rip),%rax        # 201037 <_edata+0x7>
 807:	48 8d 3d 22 08 20 00 	lea    0x200822(%rip),%rdi        # 201030 <_edata>
 80e:	55                   	push   %rbp
 80f:	48 29 f8             	sub    %rdi,%rax
 812:	48 89 e5             	mov    %rsp,%rbp
 815:	48 83 f8 0e          	cmp    $0xe,%rax
 819:	77 02                	ja     81d <deregister_tm_clones+0x1d>
 81b:	5d                   	pop    %rbp
 81c:	c3                   	retq   
 81d:	48 8b 05 b4 07 20 00 	mov    0x2007b4(%rip),%rax        # 200fd8 <_DYNAMIC+0x1d0>
 824:	48 85 c0             	test   %rax,%rax
 827:	74 f2                	je     81b <deregister_tm_clones+0x1b>
 829:	5d                   	pop    %rbp
 82a:	ff e0                	jmpq   *%rax
 82c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000830 <register_tm_clones>:
 830:	48 8d 05 f9 07 20 00 	lea    0x2007f9(%rip),%rax        # 201030 <_edata>
 837:	48 8d 3d f2 07 20 00 	lea    0x2007f2(%rip),%rdi        # 201030 <_edata>
 83e:	55                   	push   %rbp
 83f:	48 29 f8             	sub    %rdi,%rax
 842:	48 89 e5             	mov    %rsp,%rbp
 845:	48 c1 f8 03          	sar    $0x3,%rax
 849:	48 89 c2             	mov    %rax,%rdx
 84c:	48 c1 ea 3f          	shr    $0x3f,%rdx
 850:	48 01 d0             	add    %rdx,%rax
 853:	48 d1 f8             	sar    %rax
 856:	75 02                	jne    85a <register_tm_clones+0x2a>
 858:	5d                   	pop    %rbp
 859:	c3                   	retq   
 85a:	48 8b 15 8f 07 20 00 	mov    0x20078f(%rip),%rdx        # 200ff0 <_DYNAMIC+0x1e8>
 861:	48 85 d2             	test   %rdx,%rdx
 864:	74 f2                	je     858 <register_tm_clones+0x28>
 866:	5d                   	pop    %rbp
 867:	48 89 c6             	mov    %rax,%rsi
 86a:	ff e2                	jmpq   *%rdx
 86c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000870 <__do_global_dtors_aux>:
 870:	80 3d b9 07 20 00 00 	cmpb   $0x0,0x2007b9(%rip)        # 201030 <_edata>
 877:	75 27                	jne    8a0 <__do_global_dtors_aux+0x30>
 879:	48 83 3d 77 07 20 00 	cmpq   $0x0,0x200777(%rip)        # 200ff8 <_DYNAMIC+0x1f0>
 880:	00 
 881:	55                   	push   %rbp
 882:	48 89 e5             	mov    %rsp,%rbp
 885:	74 0c                	je     893 <__do_global_dtors_aux+0x23>
 887:	48 8b 3d 9a 07 20 00 	mov    0x20079a(%rip),%rdi        # 201028 <__dso_handle>
 88e:	e8 5d ff ff ff       	callq  7f0 <__cxa_finalize@plt>
 893:	e8 68 ff ff ff       	callq  800 <deregister_tm_clones>
 898:	5d                   	pop    %rbp
 899:	c6 05 90 07 20 00 01 	movb   $0x1,0x200790(%rip)        # 201030 <_edata>
 8a0:	f3 c3                	repz retq 
 8a2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
 8a9:	1f 84 00 00 00 00 00 

00000000000008b0 <frame_dummy>:
 8b0:	48 83 3d 48 05 20 00 	cmpq   $0x0,0x200548(%rip)        # 200e00 <__JCR_END__>
 8b7:	00 
 8b8:	74 26                	je     8e0 <frame_dummy+0x30>
 8ba:	48 8b 05 27 07 20 00 	mov    0x200727(%rip),%rax        # 200fe8 <_DYNAMIC+0x1e0>
 8c1:	48 85 c0             	test   %rax,%rax
 8c4:	74 1a                	je     8e0 <frame_dummy+0x30>
 8c6:	55                   	push   %rbp
 8c7:	48 8d 3d 32 05 20 00 	lea    0x200532(%rip),%rdi        # 200e00 <__JCR_END__>
 8ce:	48 89 e5             	mov    %rsp,%rbp
 8d1:	ff d0                	callq  *%rax
 8d3:	5d                   	pop    %rbp
 8d4:	e9 57 ff ff ff       	jmpq   830 <register_tm_clones>
 8d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 8e0:	e9 4b ff ff ff       	jmpq   830 <register_tm_clones>

00000000000008e5 <sgx_create_enclave>:
 8e5:	55                   	push   %rbp
 8e6:	48 89 e5             	mov    %rsp,%rbp
 8e9:	5d                   	pop    %rbp
 8ea:	c3                   	retq   

00000000000008eb <sgx_debug_load_state_add_element>:
 8eb:	55                   	push   %rbp
 8ec:	48 89 e5             	mov    %rsp,%rbp
 8ef:	5d                   	pop    %rbp
 8f0:	c3                   	retq   

00000000000008f1 <sgx_debug_unload_state_remove_element>:
 8f1:	55                   	push   %rbp
 8f2:	48 89 e5             	mov    %rsp,%rbp
 8f5:	5d                   	pop    %rbp
 8f6:	c3                   	retq   

00000000000008f7 <sgx_destroy_enclave>:
 8f7:	55                   	push   %rbp
 8f8:	48 89 e5             	mov    %rsp,%rbp
 8fb:	5d                   	pop    %rbp
 8fc:	c3                   	retq   

00000000000008fd <sgx_ecall>:
 8fd:	55                   	push   %rbp
 8fe:	48 89 e5             	mov    %rsp,%rbp
 901:	5d                   	pop    %rbp
 902:	c3                   	retq   

0000000000000903 <sgx_oc_cpuidex>:
 903:	55                   	push   %rbp
 904:	48 89 e5             	mov    %rsp,%rbp
 907:	5d                   	pop    %rbp
 908:	c3                   	retq   

0000000000000909 <sgx_ocall>:
 909:	55                   	push   %rbp
 90a:	48 89 e5             	mov    %rsp,%rbp
 90d:	5d                   	pop    %rbp
 90e:	c3                   	retq   

000000000000090f <sgx_thread_set_multiple_untrusted_events_ocall>:
 90f:	55                   	push   %rbp
 910:	48 89 e5             	mov    %rsp,%rbp
 913:	5d                   	pop    %rbp
 914:	c3                   	retq   

0000000000000915 <sgx_thread_set_untrusted_event_ocall>:
 915:	55                   	push   %rbp
 916:	48 89 e5             	mov    %rsp,%rbp
 919:	5d                   	pop    %rbp
 91a:	c3                   	retq   

000000000000091b <sgx_thread_setwait_untrusted_events_ocall>:
 91b:	55                   	push   %rbp
 91c:	48 89 e5             	mov    %rsp,%rbp
 91f:	5d                   	pop    %rbp
 920:	c3                   	retq   

0000000000000921 <sgx_thread_wait_untrusted_event_ocall>:
 921:	55                   	push   %rbp
 922:	48 89 e5             	mov    %rsp,%rbp
 925:	5d                   	pop    %rbp
 926:	c3                   	retq   

Disassembly of section .fini:

0000000000000928 <_fini>:
 928:	48 83 ec 08          	sub    $0x8,%rsp
 92c:	48 83 c4 08          	add    $0x8,%rsp
 930:	c3                   	retq   
