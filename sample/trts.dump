In archive /opt/intel/sgxsdk/lib64/libsgx_trts.a:

init_enclave.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <init_enclave>:
   0:	55                   	push   %rbp
   1:	53                   	push   %rbx
   2:	48 83 ec 08          	sub    $0x8,%rsp
   6:	48 85 ff             	test   %rdi,%rdi
   9:	74 75                	je     80 <init_enclave+0x80>
   b:	48 85 f6             	test   %rsi,%rsi
   e:	48 89 f3             	mov    %rsi,%rbx
  11:	74 6d                	je     80 <init_enclave+0x80>
  13:	e8 00 00 00 00       	callq  18 <init_enclave+0x18>
  18:	85 c0                	test   %eax,%eax
  1a:	75 64                	jne    80 <init_enclave+0x80>
  1c:	be 10 00 00 00       	mov    $0x10,%esi
  21:	48 89 df             	mov    %rbx,%rdi
  24:	e8 00 00 00 00       	callq  29 <init_enclave+0x29>
  29:	85 c0                	test   %eax,%eax
  2b:	74 53                	je     80 <init_enclave+0x80>
  2d:	8b 43 08             	mov    0x8(%rbx),%eax
  30:	48 8b 2b             	mov    (%rbx),%rbp
  33:	85 c0                	test   %eax,%eax
  35:	75 49                	jne    80 <init_enclave+0x80>
  37:	e8 00 00 00 00       	callq  3c <init_enclave+0x3c>
  3c:	48 89 ef             	mov    %rbp,%rdi
  3f:	48 89 c6             	mov    %rax,%rsi
  42:	e8 00 00 00 00       	callq  47 <init_enclave+0x47>
  47:	85 c0                	test   %eax,%eax
  49:	89 c3                	mov    %eax,%ebx
  4b:	75 2b                	jne    78 <init_enclave+0x78>
  4d:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 54 <init_enclave+0x54>
  54:	be 08 00 00 00       	mov    $0x8,%esi
  59:	e8 00 00 00 00       	callq  5e <init_enclave+0x5e>
  5e:	85 c0                	test   %eax,%eax
  60:	75 16                	jne    78 <init_enclave+0x78>
  62:	31 ff                	xor    %edi,%edi
  64:	e8 00 00 00 00       	callq  69 <init_enclave+0x69>
  69:	48 83 c4 08          	add    $0x8,%rsp
  6d:	89 d8                	mov    %ebx,%eax
  6f:	5b                   	pop    %rbx
  70:	5d                   	pop    %rbp
  71:	c3                   	retq   
  72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  78:	31 ff                	xor    %edi,%edi
  7a:	e8 00 00 00 00       	callq  7f <init_enclave+0x7f>
  7f:	90                   	nop
  80:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
  85:	48 83 c4 08          	add    $0x8,%rsp
  89:	89 d8                	mov    %ebx,%eax
  8b:	5b                   	pop    %rbx
  8c:	5d                   	pop    %rbp
  8d:	c3                   	retq   
  8e:	66 90                	xchg   %ax,%ax

0000000000000090 <do_init_enclave>:
  90:	55                   	push   %rbp
  91:	48 89 fd             	mov    %rdi,%rbp
  94:	53                   	push   %rbx
  95:	48 83 ec 08          	sub    $0x8,%rsp
  99:	e8 00 00 00 00       	callq  9e <do_init_enclave+0xe>
  9e:	48 89 c3             	mov    %rax,%rbx
  a1:	e8 00 00 00 00       	callq  a6 <do_init_enclave+0x16>
  a6:	85 c0                	test   %eax,%eax
  a8:	74 16                	je     c0 <do_init_enclave+0x30>
  aa:	48 83 c4 08          	add    $0x8,%rsp
  ae:	b8 01 00 00 00       	mov    $0x1,%eax
  b3:	5b                   	pop    %rbx
  b4:	5d                   	pop    %rbp
  b5:	c3                   	retq   
  b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  bd:	00 00 00 
  c0:	48 89 ee             	mov    %rbp,%rsi
  c3:	48 89 df             	mov    %rbx,%rdi
  c6:	e8 00 00 00 00       	callq  cb <do_init_enclave+0x3b>
  cb:	85 c0                	test   %eax,%eax
  cd:	75 db                	jne    aa <do_init_enclave+0x1a>
  cf:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # d6 <do_init_enclave+0x46>
  d6:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # dd <do_init_enclave+0x4d>
  dd:	31 f6                	xor    %esi,%esi
  df:	48 01 df             	add    %rbx,%rdi
  e2:	e8 00 00 00 00       	callq  e7 <do_init_enclave+0x57>
  e7:	c7 05 00 00 00 00 02 	movl   $0x2,0x0(%rip)        # f1 <do_init_enclave+0x61>
  ee:	00 00 00 
  f1:	48 83 c4 08          	add    $0x8,%rsp
  f5:	31 c0                	xor    %eax,%eax
  f7:	5b                   	pop    %rbx
  f8:	5d                   	pop    %rbp
  f9:	c3                   	retq   

trts.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <sgx_is_within_enclave>:
   0:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 7 <sgx_is_within_enclave+0x7>
   7:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # e <sgx_is_within_enclave+0xe>
   e:	48 01 fe             	add    %rdi,%rsi
  11:	48 8b 12             	mov    (%rdx),%rdx
  14:	48 01 c2             	add    %rax,%rdx
  17:	48 39 c7             	cmp    %rax,%rdi
  1a:	0f 93 c1             	setae  %cl
  1d:	48 39 f7             	cmp    %rsi,%rdi
  20:	75 0e                	jne    30 <sgx_is_within_enclave+0x30>
  22:	84 c9                	test   %cl,%cl
  24:	74 0a                	je     30 <sgx_is_within_enclave+0x30>
  26:	48 39 d6             	cmp    %rdx,%rsi
  29:	b8 01 00 00 00       	mov    $0x1,%eax
  2e:	72 1a                	jb     4a <sgx_is_within_enclave+0x4a>
  30:	48 39 f7             	cmp    %rsi,%rdi
  33:	73 13                	jae    48 <sgx_is_within_enclave+0x48>
  35:	84 c9                	test   %cl,%cl
  37:	74 0f                	je     48 <sgx_is_within_enclave+0x48>
  39:	31 c0                	xor    %eax,%eax
  3b:	48 39 d6             	cmp    %rdx,%rsi
  3e:	0f 96 c0             	setbe  %al
  41:	c3                   	retq   
  42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  48:	31 c0                	xor    %eax,%eax
  4a:	f3 c3                	repz retq 
  4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000050 <sgx_is_outside_enclave>:
  50:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 57 <sgx_is_outside_enclave+0x7>
  57:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 5e <sgx_is_outside_enclave+0xe>
  5e:	48 01 fe             	add    %rdi,%rsi
  61:	48 39 f7             	cmp    %rsi,%rdi
  64:	48 8b 00             	mov    (%rax),%rax
  67:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
  6b:	74 23                	je     90 <sgx_is_outside_enclave+0x40>
  6d:	b8 00 00 00 00       	mov    $0x0,%eax
  72:	73 11                	jae    85 <sgx_is_outside_enclave+0x35>
  74:	48 39 d6             	cmp    %rdx,%rsi
  77:	0f 96 c2             	setbe  %dl
  7a:	48 39 cf             	cmp    %rcx,%rdi
  7d:	0f 93 c0             	setae  %al
  80:	09 c2                	or     %eax,%edx
  82:	0f b6 c2             	movzbl %dl,%eax
  85:	f3 c3                	repz retq 
  87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  8e:	00 00 
  90:	48 39 cf             	cmp    %rcx,%rdi
  93:	0f 93 c0             	setae  %al
  96:	48 39 d7             	cmp    %rdx,%rdi
  99:	0f 92 c2             	setb   %dl
  9c:	09 d0                	or     %edx,%eax
  9e:	0f b6 c0             	movzbl %al,%eax
  a1:	c3                   	retq   
  a2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  a9:	1f 84 00 00 00 00 00 

00000000000000b0 <sgx_ocalloc>:
  b0:	41 55                	push   %r13
  b2:	49 89 fd             	mov    %rdi,%r13
  b5:	41 54                	push   %r12
  b7:	55                   	push   %rbp
  b8:	53                   	push   %rbx
  b9:	48 83 ec 18          	sub    $0x18,%rsp
  bd:	e8 00 00 00 00       	callq  c2 <sgx_ocalloc+0x12>
  c2:	48 8b 68 20          	mov    0x20(%rax),%rbp
  c6:	be 08 00 00 00       	mov    $0x8,%esi
  cb:	4c 8b a5 90 00 00 00 	mov    0x90(%rbp),%r12
  d2:	4c 89 e7             	mov    %r12,%rdi
  d5:	e8 00 00 00 00       	callq  da <sgx_ocalloc+0x2a>
  da:	85 c0                	test   %eax,%eax
  dc:	0f 84 86 00 00 00    	je     168 <sgx_ocalloc+0xb8>
  e2:	4d 39 ec             	cmp    %r13,%r12
  e5:	0f 82 7d 00 00 00    	jb     168 <sgx_ocalloc+0xb8>
  eb:	4d 29 ec             	sub    %r13,%r12
  ee:	4c 89 ee             	mov    %r13,%rsi
  f1:	4c 89 e3             	mov    %r12,%rbx
  f4:	48 83 e3 f0          	and    $0xfffffffffffffff0,%rbx
  f8:	48 89 df             	mov    %rbx,%rdi
  fb:	e8 00 00 00 00       	callq  100 <sgx_ocalloc+0x50>
 100:	85 c0                	test   %eax,%eax
 102:	74 64                	je     168 <sgx_ocalloc+0xb8>
 104:	48 8b 85 90 00 00 00 	mov    0x90(%rbp),%rax
 10b:	4c 89 e1             	mov    %r12,%rcx
 10e:	48 83 e8 01          	sub    $0x1,%rax
 112:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
 118:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
 11f:	74 47                	je     168 <sgx_ocalloc+0xb8>
 121:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
 126:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
 12b:	48 39 c1             	cmp    %rax,%rcx
 12e:	77 23                	ja     153 <sgx_ocalloc+0xa3>
 130:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
 135:	c6 02 00             	movb   $0x0,(%rdx)
 138:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
 13d:	48 81 ea 00 10 00 00 	sub    $0x1000,%rdx
 144:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
 149:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
 14e:	48 39 d1             	cmp    %rdx,%rcx
 151:	76 dd                	jbe    130 <sgx_ocalloc+0x80>
 153:	48 89 9d 90 00 00 00 	mov    %rbx,0x90(%rbp)
 15a:	48 83 c4 18          	add    $0x18,%rsp
 15e:	48 89 d8             	mov    %rbx,%rax
 161:	5b                   	pop    %rbx
 162:	5d                   	pop    %rbp
 163:	41 5c                	pop    %r12
 165:	41 5d                	pop    %r13
 167:	c3                   	retq   
 168:	e8 00 00 00 00       	callq  16d <sgx_ocalloc+0xbd>
 16d:	0f 1f 00             	nopl   (%rax)

0000000000000170 <sgx_ocfree>:
 170:	55                   	push   %rbp
 171:	53                   	push   %rbx
 172:	48 83 ec 08          	sub    $0x8,%rsp
 176:	e8 00 00 00 00       	callq  17b <sgx_ocfree+0xb>
 17b:	48 8b 68 20          	mov    0x20(%rax),%rbp
 17f:	48 8b 40 08          	mov    0x8(%rax),%rax
 183:	be 08 00 00 00       	mov    $0x8,%esi
 188:	48 8b 58 e8          	mov    -0x18(%rax),%rbx
 18c:	48 89 df             	mov    %rbx,%rdi
 18f:	e8 00 00 00 00       	callq  194 <sgx_ocfree+0x24>
 194:	85 c0                	test   %eax,%eax
 196:	74 0e                	je     1a6 <sgx_ocfree+0x36>
 198:	48 89 9d 90 00 00 00 	mov    %rbx,0x90(%rbp)
 19f:	48 83 c4 08          	add    $0x8,%rsp
 1a3:	5b                   	pop    %rbx
 1a4:	5d                   	pop    %rbp
 1a5:	c3                   	retq   
 1a6:	e8 00 00 00 00       	callq  1ab <sgx_ocfree+0x3b>
 1ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000001b0 <sgx_read_rand>:
 1b0:	41 56                	push   %r14
 1b2:	41 55                	push   %r13
 1b4:	41 54                	push   %r12
 1b6:	55                   	push   %rbp
 1b7:	48 89 fd             	mov    %rdi,%rbp
 1ba:	53                   	push   %rbx
 1bb:	48 83 ec 10          	sub    $0x10,%rsp
 1bf:	48 85 ff             	test   %rdi,%rdi
 1c2:	75 1c                	jne    1e0 <sgx_read_rand+0x30>
 1c4:	b8 02 00 00 00       	mov    $0x2,%eax
 1c9:	48 83 c4 10          	add    $0x10,%rsp
 1cd:	5b                   	pop    %rbx
 1ce:	5d                   	pop    %rbp
 1cf:	41 5c                	pop    %r12
 1d1:	41 5d                	pop    %r13
 1d3:	41 5e                	pop    %r14
 1d5:	c3                   	retq   
 1d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 1dd:	00 00 00 
 1e0:	48 85 f6             	test   %rsi,%rsi
 1e3:	48 89 f3             	mov    %rsi,%rbx
 1e6:	74 dc                	je     1c4 <sgx_read_rand+0x14>
 1e8:	e8 00 00 00 00       	callq  1ed <sgx_read_rand+0x3d>
 1ed:	85 c0                	test   %eax,%eax
 1ef:	74 4f                	je     240 <sgx_read_rand+0x90>
 1f1:	4c 8d 6c 24 0c       	lea    0xc(%rsp),%r13
 1f6:	41 be 04 00 00 00    	mov    $0x4,%r14d
 1fc:	eb 23                	jmp    221 <sgx_read_rand+0x71>
 1fe:	66 90                	xchg   %ax,%ax
 200:	48 83 fb 04          	cmp    $0x4,%rbx
 204:	4d 89 f4             	mov    %r14,%r12
 207:	48 89 ef             	mov    %rbp,%rdi
 20a:	4c 0f 46 e3          	cmovbe %rbx,%r12
 20e:	4c 89 ee             	mov    %r13,%rsi
 211:	4c 89 e2             	mov    %r12,%rdx
 214:	4c 01 e5             	add    %r12,%rbp
 217:	e8 00 00 00 00       	callq  21c <sgx_read_rand+0x6c>
 21c:	4c 29 e3             	sub    %r12,%rbx
 21f:	74 37                	je     258 <sgx_read_rand+0xa8>
 221:	4c 89 ef             	mov    %r13,%rdi
 224:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
 22b:	00 
 22c:	e8 00 00 00 00       	callq  231 <sgx_read_rand+0x81>
 231:	85 c0                	test   %eax,%eax
 233:	75 cb                	jne    200 <sgx_read_rand+0x50>
 235:	b8 01 00 00 00       	mov    $0x1,%eax
 23a:	eb 8d                	jmp    1c9 <sgx_read_rand+0x19>
 23c:	0f 1f 40 00          	nopl   0x0(%rax)
 240:	48 89 de             	mov    %rbx,%rsi
 243:	48 89 ef             	mov    %rbp,%rdi
 246:	e8 00 00 00 00       	callq  24b <sgx_read_rand+0x9b>
 24b:	85 c0                	test   %eax,%eax
 24d:	0f 84 71 ff ff ff    	je     1c4 <sgx_read_rand+0x14>
 253:	eb 9c                	jmp    1f1 <sgx_read_rand+0x41>
 255:	0f 1f 00             	nopl   (%rax)
 258:	31 c0                	xor    %eax,%eax
 25a:	e9 6a ff ff ff       	jmpq   1c9 <sgx_read_rand+0x19>
 25f:	90                   	nop

0000000000000260 <enter_enclave>:
 260:	41 55                	push   %r13
 262:	49 89 d5             	mov    %rdx,%r13
 265:	41 54                	push   %r12
 267:	49 89 f4             	mov    %rsi,%r12
 26a:	55                   	push   %rbp
 26b:	89 fd                	mov    %edi,%ebp
 26d:	53                   	push   %rbx
 26e:	89 cb                	mov    %ecx,%ebx
 270:	48 83 ec 08          	sub    $0x8,%rsp
 274:	e8 00 00 00 00       	callq  279 <enter_enclave+0x19>
 279:	83 f8 03             	cmp    $0x3,%eax
 27c:	41 b8 06 10 00 00    	mov    $0x1006,%r8d
 282:	74 1d                	je     2a1 <enter_enclave+0x41>
 284:	85 db                	test   %ebx,%ebx
 286:	75 28                	jne    2b0 <enter_enclave+0x50>
 288:	85 ed                	test   %ebp,%ebp
 28a:	78 44                	js     2d0 <enter_enclave+0x70>
 28c:	4c 89 ea             	mov    %r13,%rdx
 28f:	4c 89 e6             	mov    %r12,%rsi
 292:	89 ef                	mov    %ebp,%edi
 294:	e8 00 00 00 00       	callq  299 <enter_enclave+0x39>
 299:	83 f8 01             	cmp    $0x1,%eax
 29c:	74 17                	je     2b5 <enter_enclave+0x55>
 29e:	41 89 c0             	mov    %eax,%r8d
 2a1:	48 83 c4 08          	add    $0x8,%rsp
 2a5:	44 89 c0             	mov    %r8d,%eax
 2a8:	5b                   	pop    %rbx
 2a9:	5d                   	pop    %rbp
 2aa:	41 5c                	pop    %r12
 2ac:	41 5d                	pop    %r13
 2ae:	c3                   	retq   
 2af:	90                   	nop
 2b0:	83 fb 01             	cmp    $0x1,%ebx
 2b3:	74 33                	je     2e8 <enter_enclave+0x88>
 2b5:	bf 03 00 00 00       	mov    $0x3,%edi
 2ba:	e8 00 00 00 00       	callq  2bf <enter_enclave+0x5f>
 2bf:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 2c5:	eb da                	jmp    2a1 <enter_enclave+0x41>
 2c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 2ce:	00 00 
 2d0:	83 fd ff             	cmp    $0xffffffff,%ebp
 2d3:	74 2b                	je     300 <enter_enclave+0xa0>
 2d5:	83 fd fe             	cmp    $0xfffffffe,%ebp
 2d8:	75 db                	jne    2b5 <enter_enclave+0x55>
 2da:	4c 89 e7             	mov    %r12,%rdi
 2dd:	e8 00 00 00 00       	callq  2e2 <enter_enclave+0x82>
 2e2:	eb b5                	jmp    299 <enter_enclave+0x39>
 2e4:	0f 1f 40 00          	nopl   0x0(%rax)
 2e8:	83 fd fd             	cmp    $0xfffffffd,%ebp
 2eb:	75 c8                	jne    2b5 <enter_enclave+0x55>
 2ed:	0f 1f 00             	nopl   (%rax)
 2f0:	e8 00 00 00 00       	callq  2f5 <enter_enclave+0x95>
 2f5:	eb a2                	jmp    299 <enter_enclave+0x39>
 2f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 2fe:	00 00 
 300:	4c 89 e7             	mov    %r12,%rdi
 303:	e8 00 00 00 00       	callq  308 <enter_enclave+0xa8>
 308:	eb 8f                	jmp    299 <enter_enclave+0x39>

trts_ecall.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <do_ecall>:
   0:	41 55                	push   %r13
   2:	41 54                	push   %r12
   4:	49 89 f4             	mov    %rsi,%r12
   7:	55                   	push   %rbp
   8:	89 fd                	mov    %edi,%ebp
   a:	53                   	push   %rbx
   b:	48 89 d3             	mov    %rdx,%rbx
   e:	48 83 ec 18          	sub    $0x18,%rsp
  12:	e8 00 00 00 00       	callq  17 <do_ecall+0x17>
  17:	89 c1                	mov    %eax,%ecx
  19:	b8 01 00 00 00       	mov    $0x1,%eax
  1e:	83 f9 02             	cmp    $0x2,%ecx
  21:	74 0d                	je     30 <do_ecall+0x30>
  23:	48 83 c4 18          	add    $0x18,%rsp
  27:	5b                   	pop    %rbx
  28:	5d                   	pop    %rbp
  29:	41 5c                	pop    %r12
  2b:	41 5d                	pop    %r13
  2d:	c3                   	retq   
  2e:	66 90                	xchg   %ax,%ax
  30:	e8 00 00 00 00       	callq  35 <do_ecall+0x35>
  35:	48 85 c0             	test   %rax,%rax
  38:	0f 84 da 00 00 00    	je     118 <do_ecall+0x118>
  3e:	48 8b 70 08          	mov    0x8(%rax),%rsi
  42:	48 39 70 10          	cmp    %rsi,0x10(%rax)
  46:	74 40                	je     88 <do_ecall+0x88>
  48:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 4f <do_ecall+0x4f>
  4f:	84 c0                	test   %al,%al
  51:	0f 85 b1 01 00 00    	jne    208 <do_ecall+0x208>
  57:	4c 8b 2d 00 00 00 00 	mov    0x0(%rip),%r13        # 5e <do_ecall+0x5e>
  5e:	49 3b 6d 00          	cmp    0x0(%r13),%rbp
  62:	0f 82 c0 00 00 00    	jb     128 <do_ecall+0x128>
  68:	bb 01 10 00 00       	mov    $0x1001,%ebx
  6d:	31 ff                	xor    %edi,%edi
  6f:	e8 00 00 00 00       	callq  74 <do_ecall+0x74>
  74:	48 83 c4 18          	add    $0x18,%rsp
  78:	89 d8                	mov    %ebx,%eax
  7a:	5b                   	pop    %rbx
  7b:	5d                   	pop    %rbp
  7c:	41 5c                	pop    %r12
  7e:	41 5d                	pop    %r13
  80:	c3                   	retq   
  81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  88:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 8f <do_ecall+0x8f>
  8f:	8b 50 18             	mov    0x18(%rax),%edx
  92:	85 d2                	test   %edx,%edx
  94:	74 b2                	je     48 <do_ecall+0x48>
  96:	4c 8b 68 20          	mov    0x20(%rax),%r13
  9a:	48 8d 70 20          	lea    0x20(%rax),%rsi
  9e:	ba 98 00 00 00       	mov    $0x98,%edx
  a3:	49 01 dd             	add    %rbx,%r13
  a6:	4c 89 ef             	mov    %r13,%rdi
  a9:	e8 00 00 00 00       	callq  ae <do_ecall+0xae>
  ae:	49 01 5d 00          	add    %rbx,0x0(%r13)
  b2:	49 01 5d 08          	add    %rbx,0x8(%r13)
  b6:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  bb:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # c2 <do_ecall+0xc2>
  c2:	48 89 e6             	mov    %rsp,%rsi
  c5:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
  cc:	00 
  cd:	49 01 5d 10          	add    %rbx,0x10(%r13)
  d1:	49 01 5d 18          	add    %rbx,0x18(%r13)
  d5:	49 01 5d 20          	add    %rbx,0x20(%r13)
  d9:	49 01 5d 58          	add    %rbx,0x58(%r13)
  dd:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  e4:	00 00 
  e6:	49 01 5d 50          	add    %rbx,0x50(%r13)
  ea:	e8 00 00 00 00       	callq  ef <do_ecall+0xef>
  ef:	85 c0                	test   %eax,%eax
  f1:	75 15                	jne    108 <do_ecall+0x108>
  f3:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
  f8:	75 7c                	jne    176 <do_ecall+0x176>
  fa:	e8 00 00 00 00       	callq  ff <do_ecall+0xff>
  ff:	90                   	nop
 100:	e9 43 ff ff ff       	jmpq   48 <do_ecall+0x48>
 105:	0f 1f 00             	nopl   (%rax)
 108:	b8 01 00 00 00       	mov    $0x1,%eax
 10d:	e9 11 ff ff ff       	jmpq   23 <do_ecall+0x23>
 112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 118:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 11f <do_ecall+0x11f>
 11f:	e9 72 ff ff ff       	jmpq   96 <do_ecall+0x96>
 124:	0f 1f 40 00          	nopl   0x0(%rax)
 128:	e8 00 00 00 00       	callq  12d <do_ecall+0x12d>
 12d:	48 8b 50 08          	mov    0x8(%rax),%rdx
 131:	48 3b 50 10          	cmp    0x10(%rax),%rdx
 135:	0f 84 89 00 00 00    	je     1c4 <do_ecall+0x1c4>
 13b:	48 81 7a 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdx)
 142:	4f 
 143:	0f 85 0e 01 00 00    	jne    257 <do_ecall+0x257>
 149:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 150 <do_ecall+0x150>
 150:	48 8b 52 28          	mov    0x28(%rdx),%rdx
 154:	48 3b 10             	cmp    (%rax),%rdx
 157:	0f 83 0b ff ff ff    	jae    68 <do_ecall+0x68>
 15d:	49 0f af 55 00       	imul   0x0(%r13),%rdx
 162:	48 01 e8             	add    %rbp,%rax
 165:	80 7c 02 08 00       	cmpb   $0x0,0x8(%rdx,%rax,1)
 16a:	75 70                	jne    1dc <do_ecall+0x1dc>
 16c:	bb 07 10 00 00       	mov    $0x1007,%ebx
 171:	e9 f7 fe ff ff       	jmpq   6d <do_ecall+0x6d>
 176:	49 8b 45 00          	mov    0x0(%r13),%rax
 17a:	49 8b 7d 50          	mov    0x50(%r13),%rdi
 17e:	31 f6                	xor    %esi,%esi
 180:	48 8d 90 ff 0f 00 00 	lea    0xfff(%rax),%rdx
 187:	48 29 fa             	sub    %rdi,%rdx
 18a:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
 191:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
 198:	e8 00 00 00 00       	callq  19d <do_ecall+0x19d>
 19d:	49 8b 7d 50          	mov    0x50(%r13),%rdi
 1a1:	49 8b 45 00          	mov    0x0(%r13),%rax
 1a5:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
 1aa:	48 8b 34 24          	mov    (%rsp),%rsi
 1ae:	48 29 f8             	sub    %rdi,%rax
 1b1:	48 39 c2             	cmp    %rax,%rdx
 1b4:	0f 87 40 ff ff ff    	ja     fa <do_ecall+0xfa>
 1ba:	e8 00 00 00 00       	callq  1bf <do_ecall+0x1bf>
 1bf:	e9 36 ff ff ff       	jmpq   fa <do_ecall+0xfa>
 1c4:	48 89 e8             	mov    %rbp,%rax
 1c7:	bb 07 10 00 00       	mov    $0x1007,%ebx
 1cc:	48 c1 e0 04          	shl    $0x4,%rax
 1d0:	41 80 7c 05 10 00    	cmpb   $0x0,0x10(%r13,%rax,1)
 1d6:	0f 85 91 fe ff ff    	jne    6d <do_ecall+0x6d>
 1dc:	48 c1 e5 04          	shl    $0x4,%rbp
 1e0:	31 f6                	xor    %esi,%esi
 1e2:	bb 01 00 00 00       	mov    $0x1,%ebx
 1e7:	49 8b 6c 2d 08       	mov    0x8(%r13,%rbp,1),%rbp
 1ec:	48 89 ef             	mov    %rbp,%rdi
 1ef:	e8 00 00 00 00       	callq  1f4 <do_ecall+0x1f4>
 1f4:	85 c0                	test   %eax,%eax
 1f6:	0f 84 71 fe ff ff    	je     6d <do_ecall+0x6d>
 1fc:	4c 89 e7             	mov    %r12,%rdi
 1ff:	ff d5                	callq  *%rbp
 201:	89 c3                	mov    %eax,%ebx
 203:	e9 65 fe ff ff       	jmpq   6d <do_ecall+0x6d>
 208:	e8 00 00 00 00       	callq  20d <do_ecall+0x20d>
 20d:	48 89 c2             	mov    %rax,%rdx
 210:	b8 07 10 00 00       	mov    $0x1007,%eax
 215:	48 8b 7a 10          	mov    0x10(%rdx),%rdi
 219:	48 39 7a 08          	cmp    %rdi,0x8(%rdx)
 21d:	0f 85 00 fe ff ff    	jne    23 <do_ecall+0x23>
 223:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 22a <do_ecall+0x22a>
 22a:	e8 00 00 00 00       	callq  22f <do_ecall+0x22f>
 22f:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 236 <do_ecall+0x236>
 236:	84 c0                	test   %al,%al
 238:	74 0c                	je     246 <do_ecall+0x246>
 23a:	e8 00 00 00 00       	callq  23f <do_ecall+0x23f>
 23f:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # 246 <do_ecall+0x246>
 246:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 24d <do_ecall+0x24d>
 24d:	e8 00 00 00 00       	callq  252 <do_ecall+0x252>
 252:	e9 00 fe ff ff       	jmpq   57 <do_ecall+0x57>
 257:	e8 00 00 00 00       	callq  25c <do_ecall+0x25c>

trts_ocall.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <sgx_ocall>:
   0:	41 54                	push   %r12
   2:	55                   	push   %rbp
   3:	48 89 f5             	mov    %rsi,%rbp
   6:	53                   	push   %rbx
   7:	89 fb                	mov    %edi,%ebx
   9:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 84 24 18 02 00 	mov    %rax,0x218(%rsp)
  20:	00 
  21:	31 c0                	xor    %eax,%eax
  23:	e8 00 00 00 00       	callq  28 <sgx_ocall+0x28>
  28:	48 83 78 60 00       	cmpq   $0x0,0x60(%rax)
  2d:	ba 08 10 00 00       	mov    $0x1008,%edx
  32:	74 24                	je     58 <sgx_ocall+0x58>
  34:	48 8b b4 24 18 02 00 	mov    0x218(%rsp),%rsi
  3b:	00 
  3c:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  43:	00 00 
  45:	89 d0                	mov    %edx,%eax
  47:	75 60                	jne    a9 <sgx_ocall+0xa9>
  49:	48 81 c4 20 02 00 00 	add    $0x220,%rsp
  50:	5b                   	pop    %rbx
  51:	5d                   	pop    %rbp
  52:	41 5c                	pop    %r12
  54:	c3                   	retq   
  55:	0f 1f 00             	nopl   (%rax)
  58:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 5f <sgx_ocall+0x5f>
  5f:	89 d9                	mov    %ebx,%ecx
  61:	b2 01                	mov    $0x1,%dl
  63:	48 3b 08             	cmp    (%rax),%rcx
  66:	73 cc                	jae    34 <sgx_ocall+0x34>
  68:	31 c0                	xor    %eax,%eax
  6a:	48 89 e7             	mov    %rsp,%rdi
  6d:	b9 42 00 00 00       	mov    $0x42,%ecx
  72:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  75:	48 89 e7             	mov    %rsp,%rdi
  78:	e8 00 00 00 00       	callq  7d <sgx_ocall+0x7d>
  7d:	48 89 ee             	mov    %rbp,%rsi
  80:	89 df                	mov    %ebx,%edi
  82:	e8 00 00 00 00       	callq  87 <sgx_ocall+0x87>
  87:	48 89 e7             	mov    %rsp,%rdi
  8a:	89 c3                	mov    %eax,%ebx
  8c:	e8 00 00 00 00       	callq  91 <sgx_ocall+0x91>
  91:	31 d2                	xor    %edx,%edx
  93:	b9 10 02 00 00       	mov    $0x210,%ecx
  98:	be 10 02 00 00       	mov    $0x210,%esi
  9d:	48 89 e7             	mov    %rsp,%rdi
  a0:	e8 00 00 00 00       	callq  a5 <sgx_ocall+0xa5>
  a5:	89 da                	mov    %ebx,%edx
  a7:	eb 8b                	jmp    34 <sgx_ocall+0x34>
  a9:	e8 00 00 00 00       	callq  ae <sgx_ocall+0xae>
  ae:	66 90                	xchg   %ax,%ax

00000000000000b0 <do_oret>:
  b0:	53                   	push   %rbx
  b1:	48 89 fb             	mov    %rdi,%rbx
  b4:	48 83 ec 10          	sub    $0x10,%rsp
  b8:	e8 00 00 00 00       	callq  bd <do_oret+0xd>
  bd:	48 8b 78 08          	mov    0x8(%rax),%rdi
  c1:	48 85 ff             	test   %rdi,%rdi
  c4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  c9:	74 1a                	je     e5 <do_oret+0x35>
  cb:	48 8b 48 10          	mov    0x10(%rax),%rcx
  cf:	4c 8d 81 10 ff ff ff 	lea    -0xf0(%rcx),%r8
  d6:	4c 39 c7             	cmp    %r8,%rdi
  d9:	77 0a                	ja     e5 <do_oret+0x35>
  db:	48 81 7f 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdi)
  e2:	4f 
  e3:	74 0b                	je     f0 <do_oret+0x40>
  e5:	48 83 c4 10          	add    $0x10,%rsp
  e9:	b8 01 00 00 00       	mov    $0x1,%eax
  ee:	5b                   	pop    %rbx
  ef:	c3                   	retq   
  f0:	48 8b 77 30          	mov    0x30(%rdi),%rsi
  f4:	48 39 f1             	cmp    %rsi,%rcx
  f7:	72 ec                	jb     e5 <do_oret+0x35>
  f9:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
  fe:	48 39 ce             	cmp    %rcx,%rsi
 101:	76 e2                	jbe    e5 <do_oret+0x35>
 103:	48 89 70 08          	mov    %rsi,0x8(%rax)
 107:	48 89 de             	mov    %rbx,%rsi
 10a:	e8 00 00 00 00       	callq  10f <do_oret+0x5f>
 10f:	eb d4                	jmp    e5 <do_oret+0x35>

trts_util.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <get_heap_base>:
   0:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 7 <get_heap_base+0x7>
   7:	48 8b 40 08          	mov    0x8(%rax),%rax
   b:	48 03 05 00 00 00 00 	add    0x0(%rip),%rax        # 12 <get_heap_base+0x12>
  12:	c3                   	retq   
  13:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  1a:	84 00 00 00 00 00 

0000000000000020 <get_heap_size>:
  20:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 27 <get_heap_size+0x7>
  27:	48 8b 40 10          	mov    0x10(%rax),%rax
  2b:	c3                   	retq   
  2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000030 <get_errno_addr>:
  30:	48 83 ec 08          	sub    $0x8,%rsp
  34:	e8 00 00 00 00       	callq  39 <get_errno_addr+0x9>
  39:	48 83 c4 08          	add    $0x8,%rsp
  3d:	48 83 c0 40          	add    $0x40,%rax
  41:	c3                   	retq   
  42:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  49:	1f 84 00 00 00 00 00 

0000000000000050 <get_debug_flag>:
  50:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 57 <get_debug_flag+0x7>
  57:	8b 40 1c             	mov    0x1c(%rax),%eax
  5a:	c3                   	retq   

trts_veh.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <internal_handle_exception>:
   0:	41 56                	push   %r14
   2:	41 55                	push   %r13
   4:	41 54                	push   %r12
   6:	55                   	push   %rbp
   7:	48 89 fd             	mov    %rdi,%rbp
   a:	53                   	push   %rbx
   b:	e8 00 00 00 00       	callq  10 <internal_handle_exception+0x10>
  10:	49 89 c4             	mov    %rax,%r12
  13:	48 8b 40 60          	mov    0x60(%rax),%rax
  17:	48 85 c0             	test   %rax,%rax
  1a:	0f 88 c0 00 00 00    	js     e0 <internal_handle_exception+0xe0>
  20:	48 83 c0 01          	add    $0x1,%rax
  24:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 2b <internal_handle_exception+0x2b>
  2b:	31 db                	xor    %ebx,%ebx
  2d:	49 89 44 24 60       	mov    %rax,0x60(%r12)
  32:	e8 00 00 00 00       	callq  37 <internal_handle_exception+0x37>
  37:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 3e <internal_handle_exception+0x3e>
  3e:	48 85 d2             	test   %rdx,%rdx
  41:	74 12                	je     55 <internal_handle_exception+0x55>
  43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  48:	48 8b 52 08          	mov    0x8(%rdx),%rdx
  4c:	48 83 c3 08          	add    $0x8,%rbx
  50:	48 85 d2             	test   %rdx,%rdx
  53:	75 f3                	jne    48 <internal_handle_exception+0x48>
  55:	48 89 df             	mov    %rbx,%rdi
  58:	e8 00 00 00 00       	callq  5d <internal_handle_exception+0x5d>
  5d:	48 85 c0             	test   %rax,%rax
  60:	49 89 c5             	mov    %rax,%r13
  63:	0f 84 a6 00 00 00    	je     10f <internal_handle_exception+0x10f>
  69:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 70 <internal_handle_exception+0x70>
  70:	48 85 d2             	test   %rdx,%rdx
  73:	74 17                	je     8c <internal_handle_exception+0x8c>
  75:	0f 1f 00             	nopl   (%rax)
  78:	48 8b 0a             	mov    (%rdx),%rcx
  7b:	48 8b 52 08          	mov    0x8(%rdx),%rdx
  7f:	48 83 c0 08          	add    $0x8,%rax
  83:	48 89 48 f8          	mov    %rcx,-0x8(%rax)
  87:	48 85 d2             	test   %rdx,%rdx
  8a:	75 ec                	jne    78 <internal_handle_exception+0x78>
  8c:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 93 <internal_handle_exception+0x93>
  93:	4d 89 ee             	mov    %r13,%r14
  96:	e8 00 00 00 00       	callq  9b <internal_handle_exception+0x9b>
  9b:	48 85 db             	test   %rbx,%rbx
  9e:	75 12                	jne    b2 <internal_handle_exception+0xb2>
  a0:	eb 4c                	jmp    ee <internal_handle_exception+0xee>
  a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  a8:	49 83 c6 08          	add    $0x8,%r14
  ac:	48 83 eb 08          	sub    $0x8,%rbx
  b0:	74 3c                	je     ee <internal_handle_exception+0xee>
  b2:	49 8b 16             	mov    (%r14),%rdx
  b5:	48 33 15 00 00 00 00 	xor    0x0(%rip),%rdx        # bc <internal_handle_exception+0xbc>
  bc:	48 89 ef             	mov    %rbp,%rdi
  bf:	ff d2                	callq  *%rdx
  c1:	83 f8 ff             	cmp    $0xffffffff,%eax
  c4:	75 e2                	jne    a8 <internal_handle_exception+0xa8>
  c6:	4c 89 ef             	mov    %r13,%rdi
  c9:	e8 00 00 00 00       	callq  ce <internal_handle_exception+0xce>
  ce:	48 8b 45 20          	mov    0x20(%rbp),%rax
  d2:	49 3b 44 24 10       	cmp    0x10(%r12),%rax
  d7:	76 1f                	jbe    f8 <internal_handle_exception+0xf8>
  d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  e0:	49 c7 44 24 60 ff ff 	movq   $0xffffffffffffffff,0x60(%r12)
  e7:	ff ff 
  e9:	e8 00 00 00 00       	callq  ee <internal_handle_exception+0xee>
  ee:	4c 89 ef             	mov    %r13,%rdi
  f1:	e8 00 00 00 00       	callq  f6 <internal_handle_exception+0xf6>
  f6:	eb e8                	jmp    e0 <internal_handle_exception+0xe0>
  f8:	49 3b 44 24 18       	cmp    0x18(%r12),%rax
  fd:	76 e1                	jbe    e0 <internal_handle_exception+0xe0>
  ff:	49 83 6c 24 60 01    	subq   $0x1,0x60(%r12)
 105:	48 89 ef             	mov    %rbp,%rdi
 108:	e8 00 00 00 00       	callq  10d <internal_handle_exception+0x10d>
 10d:	eb d1                	jmp    e0 <internal_handle_exception+0xe0>
 10f:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 116 <internal_handle_exception+0x116>
 116:	e8 00 00 00 00       	callq  11b <internal_handle_exception+0x11b>
 11b:	eb c3                	jmp    e0 <internal_handle_exception+0xe0>
 11d:	0f 1f 00             	nopl   (%rax)

0000000000000120 <sgx_register_exception_handler>:
 120:	41 54                	push   %r12
 122:	41 89 fc             	mov    %edi,%r12d
 125:	55                   	push   %rbp
 126:	48 89 f5             	mov    %rsi,%rbp
 129:	53                   	push   %rbx
 12a:	48 83 ec 10          	sub    $0x10,%rsp
 12e:	48 83 3d 00 00 00 00 	cmpq   $0x0,0x0(%rip)        # 136 <sgx_register_exception_handler+0x16>
 135:	00 
 136:	0f 84 8e 00 00 00    	je     1ca <sgx_register_exception_handler+0xaa>
 13c:	31 f6                	xor    %esi,%esi
 13e:	48 89 ef             	mov    %rbp,%rdi
 141:	e8 00 00 00 00       	callq  146 <sgx_register_exception_handler+0x26>
 146:	85 c0                	test   %eax,%eax
 148:	0f 84 b2 00 00 00    	je     200 <sgx_register_exception_handler+0xe0>
 14e:	bf 10 00 00 00       	mov    $0x10,%edi
 153:	e8 00 00 00 00       	callq  158 <sgx_register_exception_handler+0x38>
 158:	48 85 c0             	test   %rax,%rax
 15b:	48 89 c3             	mov    %rax,%rbx
 15e:	0f 84 9c 00 00 00    	je     200 <sgx_register_exception_handler+0xe0>
 164:	48 33 2d 00 00 00 00 	xor    0x0(%rip),%rbp        # 16b <sgx_register_exception_handler+0x4b>
 16b:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 172 <sgx_register_exception_handler+0x52>
 172:	48 89 28             	mov    %rbp,(%rax)
 175:	e8 00 00 00 00       	callq  17a <sgx_register_exception_handler+0x5a>
 17a:	48 8b 0d 00 00 00 00 	mov    0x0(%rip),%rcx        # 181 <sgx_register_exception_handler+0x61>
 181:	48 85 c9             	test   %rcx,%rcx
 184:	74 05                	je     18b <sgx_register_exception_handler+0x6b>
 186:	45 85 e4             	test   %r12d,%r12d
 189:	74 28                	je     1b3 <sgx_register_exception_handler+0x93>
 18b:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
 18f:	48 89 1d 00 00 00 00 	mov    %rbx,0x0(%rip)        # 196 <sgx_register_exception_handler+0x76>
 196:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 19d <sgx_register_exception_handler+0x7d>
 19d:	e8 00 00 00 00       	callq  1a2 <sgx_register_exception_handler+0x82>
 1a2:	48 83 c4 10          	add    $0x10,%rsp
 1a6:	48 89 d8             	mov    %rbx,%rax
 1a9:	5b                   	pop    %rbx
 1aa:	5d                   	pop    %rbp
 1ab:	41 5c                	pop    %r12
 1ad:	c3                   	retq   
 1ae:	66 90                	xchg   %ax,%ax
 1b0:	48 89 d1             	mov    %rdx,%rcx
 1b3:	48 8b 51 08          	mov    0x8(%rcx),%rdx
 1b7:	48 85 d2             	test   %rdx,%rdx
 1ba:	75 f4                	jne    1b0 <sgx_register_exception_handler+0x90>
 1bc:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
 1c3:	00 
 1c4:	48 89 59 08          	mov    %rbx,0x8(%rcx)
 1c8:	eb cc                	jmp    196 <sgx_register_exception_handler+0x76>
 1ca:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
 1d1:	00 00 
 1d3:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
 1d8:	eb 0e                	jmp    1e8 <sgx_register_exception_handler+0xc8>
 1da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 1e0:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
 1e6:	75 23                	jne    20b <sgx_register_exception_handler+0xeb>
 1e8:	be 08 00 00 00       	mov    $0x8,%esi
 1ed:	48 89 df             	mov    %rbx,%rdi
 1f0:	e8 00 00 00 00       	callq  1f5 <sgx_register_exception_handler+0xd5>
 1f5:	85 c0                	test   %eax,%eax
 1f7:	74 e7                	je     1e0 <sgx_register_exception_handler+0xc0>
 1f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 200:	48 83 c4 10          	add    $0x10,%rsp
 204:	31 c0                	xor    %eax,%eax
 206:	5b                   	pop    %rbx
 207:	5d                   	pop    %rbp
 208:	41 5c                	pop    %r12
 20a:	c3                   	retq   
 20b:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 212 <sgx_register_exception_handler+0xf2>
 212:	e8 00 00 00 00       	callq  217 <sgx_register_exception_handler+0xf7>
 217:	48 83 3d 00 00 00 00 	cmpq   $0x0,0x0(%rip)        # 21f <sgx_register_exception_handler+0xff>
 21e:	00 
 21f:	75 0c                	jne    22d <sgx_register_exception_handler+0x10d>
 221:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
 226:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 22d <sgx_register_exception_handler+0x10d>
 22d:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 234 <sgx_register_exception_handler+0x114>
 234:	e8 00 00 00 00       	callq  239 <sgx_register_exception_handler+0x119>
 239:	e9 fe fe ff ff       	jmpq   13c <sgx_register_exception_handler+0x1c>
 23e:	66 90                	xchg   %ax,%ax

0000000000000240 <sgx_unregister_exception_handler>:
 240:	31 c0                	xor    %eax,%eax
 242:	48 85 ff             	test   %rdi,%rdi
 245:	53                   	push   %rbx
 246:	48 89 fb             	mov    %rdi,%rbx
 249:	74 44                	je     28f <sgx_unregister_exception_handler+0x4f>
 24b:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 252 <sgx_unregister_exception_handler+0x12>
 252:	e8 00 00 00 00       	callq  257 <sgx_unregister_exception_handler+0x17>
 257:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 25e <sgx_unregister_exception_handler+0x1e>
 25e:	48 85 d2             	test   %rdx,%rdx
 261:	74 1e                	je     281 <sgx_unregister_exception_handler+0x41>
 263:	48 39 d3             	cmp    %rdx,%rbx
 266:	75 10                	jne    278 <sgx_unregister_exception_handler+0x38>
 268:	eb 51                	jmp    2bb <sgx_unregister_exception_handler+0x7b>
 26a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 270:	48 39 c3             	cmp    %rax,%rbx
 273:	74 23                	je     298 <sgx_unregister_exception_handler+0x58>
 275:	48 89 c2             	mov    %rax,%rdx
 278:	48 8b 42 08          	mov    0x8(%rdx),%rax
 27c:	48 85 c0             	test   %rax,%rax
 27f:	75 ef                	jne    270 <sgx_unregister_exception_handler+0x30>
 281:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 288 <sgx_unregister_exception_handler+0x48>
 288:	e8 00 00 00 00       	callq  28d <sgx_unregister_exception_handler+0x4d>
 28d:	31 c0                	xor    %eax,%eax
 28f:	5b                   	pop    %rbx
 290:	c3                   	retq   
 291:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 298:	48 8b 43 08          	mov    0x8(%rbx),%rax
 29c:	48 89 42 08          	mov    %rax,0x8(%rdx)
 2a0:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 2a7 <sgx_unregister_exception_handler+0x67>
 2a7:	e8 00 00 00 00       	callq  2ac <sgx_unregister_exception_handler+0x6c>
 2ac:	48 89 df             	mov    %rbx,%rdi
 2af:	e8 00 00 00 00       	callq  2b4 <sgx_unregister_exception_handler+0x74>
 2b4:	b8 01 00 00 00       	mov    $0x1,%eax
 2b9:	5b                   	pop    %rbx
 2ba:	c3                   	retq   
 2bb:	48 8b 43 08          	mov    0x8(%rbx),%rax
 2bf:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 2c6 <sgx_unregister_exception_handler+0x86>
 2c6:	eb d8                	jmp    2a0 <sgx_unregister_exception_handler+0x60>
 2c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 2cf:	00 

00000000000002d0 <trts_handle_exception>:
 2d0:	48 83 ec 08          	sub    $0x8,%rsp
 2d4:	e8 00 00 00 00       	callq  2d9 <trts_handle_exception+0x9>
 2d9:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 2e0 <trts_handle_exception+0x10>
 2e0:	83 3a 02             	cmpl   $0x2,(%rdx)
 2e3:	74 13                	je     2f8 <trts_handle_exception+0x28>
 2e5:	c7 02 03 00 00 00    	movl   $0x3,(%rdx)
 2eb:	b8 06 10 00 00       	mov    $0x1006,%eax
 2f0:	48 83 c4 08          	add    $0x8,%rsp
 2f4:	c3                   	retq   
 2f5:	0f 1f 00             	nopl   (%rax)
 2f8:	48 83 78 60 ff       	cmpq   $0xffffffffffffffff,0x60(%rax)
 2fd:	74 e6                	je     2e5 <trts_handle_exception+0x15>
 2ff:	48 8b 48 20          	mov    0x20(%rax),%rcx
 303:	80 b9 a3 00 00 00 00 	cmpb   $0x0,0xa3(%rcx)
 30a:	79 d9                	jns    2e5 <trts_handle_exception+0x15>
 30c:	48 8b 79 20          	mov    0x20(%rcx),%rdi
 310:	44 0f b6 81 a0 00 00 	movzbl 0xa0(%rcx),%r8d
 317:	00 
 318:	48 8d b7 68 ff ff ff 	lea    -0x98(%rdi),%rsi
 31f:	48 83 e6 f0          	and    $0xfffffffffffffff0,%rsi
 323:	44 89 86 90 00 00 00 	mov    %r8d,0x90(%rsi)
 32a:	44 0f b6 81 a1 00 00 	movzbl 0xa1(%rcx),%r8d
 331:	00 
 332:	41 83 e0 07          	and    $0x7,%r8d
 336:	44 89 86 94 00 00 00 	mov    %r8d,0x94(%rsi)
 33d:	4c 8b 01             	mov    (%rcx),%r8
 340:	4c 89 06             	mov    %r8,(%rsi)
 343:	4c 8b 41 08          	mov    0x8(%rcx),%r8
 347:	4c 89 46 08          	mov    %r8,0x8(%rsi)
 34b:	4c 8b 41 10          	mov    0x10(%rcx),%r8
 34f:	4c 89 46 10          	mov    %r8,0x10(%rsi)
 353:	4c 8b 41 18          	mov    0x18(%rcx),%r8
 357:	48 89 7e 20          	mov    %rdi,0x20(%rsi)
 35b:	48 8b 79 28          	mov    0x28(%rcx),%rdi
 35f:	4c 89 46 18          	mov    %r8,0x18(%rsi)
 363:	4c 8b 81 88 00 00 00 	mov    0x88(%rcx),%r8
 36a:	48 89 7e 28          	mov    %rdi,0x28(%rsi)
 36e:	48 8b 79 30          	mov    0x30(%rcx),%rdi
 372:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
 376:	48 8b 79 38          	mov    0x38(%rcx),%rdi
 37a:	48 89 7e 38          	mov    %rdi,0x38(%rsi)
 37e:	48 8b b9 80 00 00 00 	mov    0x80(%rcx),%rdi
 385:	4c 89 86 88 00 00 00 	mov    %r8,0x88(%rsi)
 38c:	48 89 be 80 00 00 00 	mov    %rdi,0x80(%rsi)
 393:	48 8b 79 40          	mov    0x40(%rcx),%rdi
 397:	48 89 7e 40          	mov    %rdi,0x40(%rsi)
 39b:	48 8b 79 48          	mov    0x48(%rcx),%rdi
 39f:	48 89 7e 48          	mov    %rdi,0x48(%rsi)
 3a3:	48 8b 79 50          	mov    0x50(%rcx),%rdi
 3a7:	48 89 7e 50          	mov    %rdi,0x50(%rsi)
 3ab:	48 8b 79 58          	mov    0x58(%rcx),%rdi
 3af:	48 89 7e 58          	mov    %rdi,0x58(%rsi)
 3b3:	48 8b 79 60          	mov    0x60(%rcx),%rdi
 3b7:	48 89 7e 60          	mov    %rdi,0x60(%rsi)
 3bb:	48 8b 79 68          	mov    0x68(%rcx),%rdi
 3bf:	48 89 7e 68          	mov    %rdi,0x68(%rsi)
 3c3:	48 8b 79 70          	mov    0x70(%rcx),%rdi
 3c7:	48 89 7e 70          	mov    %rdi,0x70(%rsi)
 3cb:	48 8b 79 78          	mov    0x78(%rcx),%rdi
 3cf:	48 89 7e 78          	mov    %rdi,0x78(%rsi)
 3d3:	48 8d 7e f8          	lea    -0x8(%rsi),%rdi
 3d7:	48 3b 78 10          	cmp    0x10(%rax),%rdi
 3db:	0f 83 04 ff ff ff    	jae    2e5 <trts_handle_exception+0x15>
 3e1:	48 3b 78 18          	cmp    0x18(%rax),%rdi
 3e5:	0f 86 fa fe ff ff    	jbe    2e5 <trts_handle_exception+0x15>
 3eb:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3f2 <trts_handle_exception+0x122>
 3f2:	48 89 79 20          	mov    %rdi,0x20(%rcx)
 3f6:	48 89 31             	mov    %rsi,(%rcx)
 3f9:	48 89 71 38          	mov    %rsi,0x38(%rcx)
 3fd:	48 89 81 88 00 00 00 	mov    %rax,0x88(%rcx)
 404:	4c 89 46 f8          	mov    %r8,-0x8(%rsi)
 408:	31 c0                	xor    %eax,%eax
 40a:	e9 e1 fe ff ff       	jmpq   2f0 <trts_handle_exception+0x20>

trts_xsave.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <get_xfeature_state>:
   0:	53                   	push   %rbx
   1:	b9 75 00 00 00       	mov    $0x75,%ecx
   6:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # d <get_xfeature_state+0xd>
   d:	48 81 ec c0 03 00 00 	sub    $0x3c0,%rsp
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 84 24 b8 03 00 	mov    %rax,0x3b8(%rsp)
  24:	00 
  25:	31 c0                	xor    %eax,%eax
  27:	48 89 e7             	mov    %rsp,%rdi
  2a:	48 8d 9c 24 ff 01 00 	lea    0x1ff(%rsp),%rbx
  31:	00 
  32:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  35:	48 81 e3 00 fe ff ff 	and    $0xfffffffffffffe00,%rbx
  3c:	31 c0                	xor    %eax,%eax
  3e:	48 89 da             	mov    %rbx,%rdx
  41:	66 89 47 04          	mov    %ax,0x4(%rdi)
  45:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
  4b:	c6 47 06 00          	movb   $0x0,0x6(%rdi)
  4f:	48 89 f7             	mov    %rsi,%rdi
  52:	e8 00 00 00 00       	callq  57 <get_xfeature_state+0x57>
  57:	48 8b 43 38          	mov    0x38(%rbx),%rax
  5b:	31 d2                	xor    %edx,%edx
  5d:	48 83 f8 03          	cmp    $0x3,%rax
  61:	0f 95 c2             	setne  %dl
  64:	48 8b b4 24 b8 03 00 	mov    0x3b8(%rsp),%rsi
  6b:	00 
  6c:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  73:	00 00 
  75:	89 15 00 00 00 00    	mov    %edx,0x0(%rip)        # 7b <get_xfeature_state+0x7b>
  7b:	75 09                	jne    86 <get_xfeature_state+0x86>
  7d:	48 81 c4 c0 03 00 00 	add    $0x3c0,%rsp
  84:	5b                   	pop    %rbx
  85:	c3                   	retq   
  86:	e8 00 00 00 00       	callq  8b <get_xfeature_state+0x8b>
  8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000090 <save_and_clean_xfeature_regs>:
  90:	9b                   	fwait
  91:	48 85 ff             	test   %rdi,%rdi
  94:	74 0c                	je     a2 <save_and_clean_xfeature_regs+0x12>
  96:	48 83 c7 0f          	add    $0xf,%rdi
  9a:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
  9e:	48 0f ae 07          	fxsave64 (%rdi)
  a2:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # a8 <save_and_clean_xfeature_regs+0x18>
  a8:	85 c0                	test   %eax,%eax
  aa:	75 14                	jne    c0 <save_and_clean_xfeature_regs+0x30>
  ac:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # b3 <save_and_clean_xfeature_regs+0x23>
  b3:	48 0f ae 08          	fxrstor64 (%rax)
  b7:	c3                   	retq   
  b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  bf:	00 
  c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  c5:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # cc <save_and_clean_xfeature_regs+0x3c>
  cc:	89 c2                	mov    %eax,%edx
  ce:	48 0f ae 2f          	xrstor64 (%rdi)
  d2:	c3                   	retq   
  d3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  da:	84 00 00 00 00 00 

00000000000000e0 <restore_xfeature_regs>:
  e0:	48 85 ff             	test   %rdi,%rdi
  e3:	74 0c                	je     f1 <restore_xfeature_regs+0x11>
  e5:	48 83 c7 0f          	add    $0xf,%rdi
  e9:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
  ed:	48 0f ae 0f          	fxrstor64 (%rdi)
  f1:	f3 c3                	repz retq 

init_optimized_lib.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <init_optimized_libs>:
   0:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 7 <init_optimized_libs+0x7>
   7:	53                   	push   %rbx
   8:	83 38 01             	cmpl   $0x1,(%rax)
   b:	0f 85 df 00 00 00    	jne    f0 <init_optimized_libs+0xf0>
  11:	48 89 f8             	mov    %rdi,%rax
  14:	25 ff ff ff 1e       	and    $0x1effffff,%eax
  19:	48 f7 c7 00 00 00 e1 	test   $0xffffffffe1000000,%rdi
  20:	48 0f 45 f8          	cmovne %rax,%rdi
  24:	48 f7 c7 00 fc ff ff 	test   $0xfffffffffffffc00,%rdi
  2b:	0f 84 bf 00 00 00    	je     f0 <init_optimized_libs+0xf0>
  31:	40 f6 c7 20          	test   $0x20,%dil
  35:	74 10                	je     47 <init_optimized_libs+0x47>
  37:	48 89 f8             	mov    %rdi,%rax
  3a:	83 e0 1f             	and    $0x1f,%eax
  3d:	48 83 f8 1f          	cmp    $0x1f,%rax
  41:	0f 85 a9 00 00 00    	jne    f0 <init_optimized_libs+0xf0>
  47:	40 f6 c7 40          	test   $0x40,%dil
  4b:	74 10                	je     5d <init_optimized_libs+0x5d>
  4d:	48 89 f8             	mov    %rdi,%rax
  50:	83 e0 3f             	and    $0x3f,%eax
  53:	48 83 f8 3f          	cmp    $0x3f,%rax
  57:	0f 85 93 00 00 00    	jne    f0 <init_optimized_libs+0xf0>
  5d:	40 f6 c7 80          	test   $0x80,%dil
  61:	74 10                	je     73 <init_optimized_libs+0x73>
  63:	48 89 f8             	mov    %rdi,%rax
  66:	83 e0 7f             	and    $0x7f,%eax
  69:	48 83 f8 7f          	cmp    $0x7f,%rax
  6d:	0f 85 7d 00 00 00    	jne    f0 <init_optimized_libs+0xf0>
  73:	f7 c7 00 01 00 00    	test   $0x100,%edi
  79:	74 06                	je     81 <init_optimized_libs+0x81>
  7b:	40 80 ff ff          	cmp    $0xff,%dil
  7f:	75 6f                	jne    f0 <init_optimized_libs+0xf0>
  81:	f7 c7 00 02 00 00    	test   $0x200,%edi
  87:	74 10                	je     99 <init_optimized_libs+0x99>
  89:	48 89 f8             	mov    %rdi,%rax
  8c:	25 ff 01 00 00       	and    $0x1ff,%eax
  91:	48 3d ff 01 00 00    	cmp    $0x1ff,%rax
  97:	75 57                	jne    f0 <init_optimized_libs+0xf0>
  99:	f7 c7 00 04 00 00    	test   $0x400,%edi
  9f:	75 3f                	jne    e0 <init_optimized_libs+0xe0>
  a1:	83 e6 06             	and    $0x6,%esi
  a4:	48 89 f8             	mov    %rdi,%rax
  a7:	48 8b 1d 00 00 00 00 	mov    0x0(%rip),%rbx        # ae <init_optimized_libs+0xae>
  ae:	48 25 ff 7f 12 f1    	and    $0xfffffffff1127fff,%rax
  b4:	48 83 fe 06          	cmp    $0x6,%rsi
  b8:	48 0f 45 f8          	cmovne %rax,%rdi
  bc:	48 89 3b             	mov    %rdi,(%rbx)
  bf:	e8 00 00 00 00       	callq  c4 <init_optimized_libs+0xc4>
  c4:	85 c0                	test   %eax,%eax
  c6:	75 28                	jne    f0 <init_optimized_libs+0xf0>
  c8:	48 8b 3b             	mov    (%rbx),%rdi
  cb:	e8 00 00 00 00       	callq  d0 <init_optimized_libs+0xd0>
  d0:	85 c0                	test   %eax,%eax
  d2:	0f 95 c0             	setne  %al
  d5:	0f b6 c0             	movzbl %al,%eax
  d8:	f7 d8                	neg    %eax
  da:	5b                   	pop    %rbx
  db:	c3                   	retq   
  dc:	0f 1f 40 00          	nopl   0x0(%rax)
  e0:	48 89 f8             	mov    %rdi,%rax
  e3:	25 ff 03 00 00       	and    $0x3ff,%eax
  e8:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
  ee:	74 b1                	je     a1 <init_optimized_libs+0xa1>
  f0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  f5:	5b                   	pop    %rbx
  f6:	c3                   	retq   

trts_pic.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <get_enclave_base>:
   0:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7 <get_enclave_base+0x7>
   7:	c3                   	retq   

0000000000000008 <get_enclave_state>:
   8:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # f <get_enclave_state+0x7>
   f:	48 31 c0             	xor    %rax,%rax
  12:	8b 01                	mov    (%rcx),%eax
  14:	c3                   	retq   

0000000000000015 <set_enclave_state>:
  15:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c <set_enclave_state+0x7>
  1c:	89 38                	mov    %edi,(%rax)
  1e:	c3                   	retq   

000000000000001f <lock_enclave>:
  1f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 26 <lock_enclave+0x7>
  26:	48 31 c0             	xor    %rax,%rax
  29:	b8 00 00 00 00       	mov    $0x0,%eax
  2e:	48 31 c9             	xor    %rcx,%rcx
  31:	b9 01 00 00 00       	mov    $0x1,%ecx
  36:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
  3a:	c3                   	retq   

000000000000003b <get_thread_data>:
  3b:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
  42:	00 00 
  44:	c3                   	retq   

0000000000000045 <enclave_entry>:
  45:	48 83 f8 00          	cmp    $0x0,%rax
  49:	0f 85 81 00 00 00    	jne    d0 <enclave_entry+0x8b>
  4f:	48 31 d2             	xor    %rdx,%rdx
  52:	65 48 8b 04 25 08 00 	mov    %gs:0x8,%rax
  59:	00 00 
  5b:	48 83 f8 00          	cmp    $0x0,%rax
  5f:	48 0f 44 c3          	cmove  %rbx,%rax
  63:	48 94                	xchg   %rax,%rsp
  65:	51                   	push   %rcx
  66:	55                   	push   %rbp
  67:	48 89 e5             	mov    %rsp,%rbp
  6a:	48 83 ec 30          	sub    $0x30,%rsp
  6e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  72:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  76:	48 89 5d e0          	mov    %rbx,-0x20(%rbp)
  7a:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  7e:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  82:	48 89 d1             	mov    %rdx,%rcx
  85:	48 89 da             	mov    %rbx,%rdx
  88:	e8 00 00 00 00       	callq  8d <enclave_entry+0x48>
  8d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  91:	48 89 ec             	mov    %rbp,%rsp
  94:	5d                   	pop    %rbp
  95:	5b                   	pop    %rbx
  96:	48 89 d4             	mov    %rdx,%rsp
  99:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
  a0:	48 89 c6             	mov    %rax,%rsi
  a3:	48 31 c9             	xor    %rcx,%rcx
  a6:	48 31 d2             	xor    %rdx,%rdx
  a9:	4d 31 c0             	xor    %r8,%r8
  ac:	4d 31 c9             	xor    %r9,%r9
  af:	4d 31 d2             	xor    %r10,%r10
  b2:	4d 31 db             	xor    %r11,%r11
  b5:	4d 31 e4             	xor    %r12,%r12
  b8:	4d 31 ed             	xor    %r13,%r13
  bb:	4d 31 f6             	xor    %r14,%r14
  be:	4d 31 ff             	xor    %r15,%r15
  c1:	48 01 d2             	add    %rdx,%rdx
  c4:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
  cb:	0f 01 d7             	enclu  
  ce:	0f 0b                	ud2    
  d0:	65 48 8b 04 25 10 00 	mov    %gs:0x10,%rax
  d7:	00 00 
  d9:	48 39 d8             	cmp    %rbx,%rax
  dc:	75 5b                	jne    139 <enclave_entry+0xf4>
  de:	65 48 8b 04 25 20 00 	mov    %gs:0x20,%rax
  e5:	00 00 
  e7:	48 89 c2             	mov    %rax,%rdx
  ea:	66 81 e2 00 f0       	and    $0xf000,%dx
  ef:	48 81 ea 00 10 00 00 	sub    $0x1000,%rdx
  f6:	48 39 da             	cmp    %rbx,%rdx
  f9:	75 3e                	jne    139 <enclave_entry+0xf4>
  fb:	48 8b 50 20          	mov    0x20(%rax),%rdx
  ff:	48 39 d3             	cmp    %rdx,%rbx
 102:	72 35                	jb     139 <enclave_entry+0xf4>
 104:	48 81 ea a8 00 00 00 	sub    $0xa8,%rdx
 10b:	80 e2 f0             	and    $0xf0,%dl
 10e:	65 48 8b 04 25 18 00 	mov    %gs:0x18,%rax
 115:	00 00 
 117:	48 92                	xchg   %rax,%rdx
 119:	48 81 c2 c8 00 00 00 	add    $0xc8,%rdx
 120:	48 39 c2             	cmp    %rax,%rdx
 123:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
 12a:	0f 82 33 ff ff ff    	jb     63 <enclave_entry+0x1e>
 130:	48 c7 c6 09 10 00 00 	mov    $0x1009,%rsi
 137:	eb 07                	jmp    140 <enclave_entry+0xfb>
 139:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
 140:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 147 <enclave_entry+0x102>
 147:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
 14e:	48 89 cb             	mov    %rcx,%rbx
 151:	48 31 c9             	xor    %rcx,%rcx
 154:	b9 03 00 00 00       	mov    $0x3,%ecx
 159:	48 c7 c2 06 10 00 00 	mov    $0x1006,%rdx
 160:	39 08                	cmp    %ecx,(%rax)
 162:	48 0f 44 f2          	cmove  %rdx,%rsi
 166:	89 08                	mov    %ecx,(%rax)
 168:	e9 36 ff ff ff       	jmpq   a3 <enclave_entry+0x5e>

000000000000016d <do_ocall>:
 16d:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
 174:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
 179:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
 17e:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
 183:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
 188:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
 18d:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
 192:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
 197:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
 19c:	89 ff                	mov    %edi,%edi
 19e:	48 c7 c0 44 49 43 4f 	mov    $0x4f434944,%rax
 1a5:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
 1aa:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
 1af:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
 1b6:	00 00 
 1b8:	48 89 c3             	mov    %rax,%rbx
 1bb:	65 48 8b 04 25 08 00 	mov    %gs:0x8,%rax
 1c2:	00 00 
 1c4:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
 1c9:	48 89 63 08          	mov    %rsp,0x8(%rbx)
 1cd:	48 8b 53 20          	mov    0x20(%rbx),%rdx
 1d1:	48 8b aa 98 00 00 00 	mov    0x98(%rdx),%rbp
 1d8:	48 8b a2 90 00 00 00 	mov    0x90(%rdx),%rsp
 1df:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
 1e3:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
 1ea:	48 31 c9             	xor    %rcx,%rcx
 1ed:	48 31 d2             	xor    %rdx,%rdx
 1f0:	4d 31 c0             	xor    %r8,%r8
 1f3:	4d 31 c9             	xor    %r9,%r9
 1f6:	4d 31 d2             	xor    %r10,%r10
 1f9:	4d 31 db             	xor    %r11,%r11
 1fc:	4d 31 e4             	xor    %r12,%r12
 1ff:	4d 31 ed             	xor    %r13,%r13
 202:	4d 31 f6             	xor    %r14,%r14
 205:	4d 31 ff             	xor    %r15,%r15
 208:	48 01 d2             	add    %rdx,%rdx
 20b:	0f 01 d7             	enclu  

000000000000020e <__morestack>:
 20e:	55                   	push   %rbp
 20f:	48 89 e5             	mov    %rsp,%rbp
 212:	e8 00 00 00 00       	callq  217 <__morestack+0x9>
 217:	c9                   	leaveq 
 218:	c3                   	retq   

0000000000000219 <asm_oret>:
 219:	48 89 fc             	mov    %rdi,%rsp
 21c:	48 89 f0             	mov    %rsi,%rax
 21f:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
 224:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
 229:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
 22e:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
 233:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
 238:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
 23d:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
 242:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
 247:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
 24e:	c3                   	retq   
 24f:	0f 0b                	ud2    

0000000000000251 <do_egetkey>:
 251:	53                   	push   %rbx
 252:	51                   	push   %rcx
 253:	52                   	push   %rdx
 254:	48 89 fb             	mov    %rdi,%rbx
 257:	48 89 f1             	mov    %rsi,%rcx
 25a:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
 261:	0f 01 d7             	enclu  
 264:	74 03                	je     269 <do_egetkey+0x18>
 266:	48 31 c0             	xor    %rax,%rax
 269:	5a                   	pop    %rdx
 26a:	59                   	pop    %rcx
 26b:	5b                   	pop    %rbx
 26c:	c3                   	retq   
 26d:	c3                   	retq   

000000000000026e <do_ereport>:
 26e:	53                   	push   %rbx
 26f:	51                   	push   %rcx
 270:	52                   	push   %rdx
 271:	48 89 fb             	mov    %rdi,%rbx
 274:	48 89 f1             	mov    %rsi,%rcx
 277:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
 27e:	0f 01 d7             	enclu  
 281:	5a                   	pop    %rdx
 282:	59                   	pop    %rcx
 283:	5b                   	pop    %rbx
 284:	c3                   	retq   
 285:	c3                   	retq   

0000000000000286 <do_rdrand>:
 286:	b9 0a 00 00 00       	mov    $0xa,%ecx
 28b:	0f c7 f0             	rdrand %eax
 28e:	72 08                	jb     298 <do_rdrand+0x12>
 290:	ff c9                	dec    %ecx
 292:	75 f7                	jne    28b <do_rdrand+0x5>
 294:	48 31 c0             	xor    %rax,%rax
 297:	c3                   	retq   
 298:	48 89 f9             	mov    %rdi,%rcx
 29b:	89 01                	mov    %eax,(%rcx)
 29d:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
 2a4:	c3                   	retq   

00000000000002a5 <abort>:
 2a5:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2ac <abort+0x7>
 2ac:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
 2b2:	0f 0b                	ud2    

00000000000002b4 <continue_execution>:
 2b4:	48 89 f9             	mov    %rdi,%rcx
 2b7:	48 8b 51 20          	mov    0x20(%rcx),%rdx
 2bb:	48 89 d4             	mov    %rdx,%rsp
 2be:	48 83 ec 08          	sub    $0x8,%rsp
 2c2:	48 8b 81 88 00 00 00 	mov    0x88(%rcx),%rax
 2c9:	48 89 04 24          	mov    %rax,(%rsp)
 2cd:	48 8b 01             	mov    (%rcx),%rax
 2d0:	48 8b 51 10          	mov    0x10(%rcx),%rdx
 2d4:	48 8b 59 18          	mov    0x18(%rcx),%rbx
 2d8:	48 8b 69 28          	mov    0x28(%rcx),%rbp
 2dc:	48 8b 71 30          	mov    0x30(%rcx),%rsi
 2e0:	48 8b 79 38          	mov    0x38(%rcx),%rdi
 2e4:	48 8b 71 40          	mov    0x40(%rcx),%rsi
 2e8:	48 8b 71 48          	mov    0x48(%rcx),%rsi
 2ec:	48 8b 71 50          	mov    0x50(%rcx),%rsi
 2f0:	48 8b 71 58          	mov    0x58(%rcx),%rsi
 2f4:	48 8b 71 60          	mov    0x60(%rcx),%rsi
 2f8:	48 8b 71 68          	mov    0x68(%rcx),%rsi
 2fc:	48 8b 71 70          	mov    0x70(%rcx),%rsi
 300:	48 8b 71 78          	mov    0x78(%rcx),%rsi
 304:	ff b1 80 00 00 00    	pushq  0x80(%rcx)
 30a:	9d                   	popfq  
 30b:	48 8b 49 08          	mov    0x8(%rcx),%rcx
 30f:	c3                   	retq   

elf_parser.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <do_relocs>:
   0:	48 01 fe             	add    %rdi,%rsi
   3:	48 01 fa             	add    %rdi,%rdx
   6:	45 31 c0             	xor    %r8d,%r8d
   9:	48 85 c9             	test   %rcx,%rcx
   c:	4c 8d 15 00 00 00 00 	lea    0x0(%rip),%r10        # 13 <do_relocs+0x13>
  13:	0f 84 3e 02 00 00    	je     257 <do_relocs+0x257>
  19:	55                   	push   %rbp
  1a:	53                   	push   %rbx
  1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  20:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
  24:	49 89 fb             	mov    %rdi,%r11
  27:	4c 03 1e             	add    (%rsi),%r11
  2a:	44 89 c8             	mov    %r9d,%eax
  2d:	48 83 f8 12          	cmp    $0x12,%rax
  31:	77 79                	ja     ac <do_relocs+0xac>
  33:	49 63 04 82          	movslq (%r10,%rax,4),%rax
  37:	4c 01 d0             	add    %r10,%rax
  3a:	ff e0                	jmpq   *%rax
  3c:	0f 1f 40 00          	nopl   0x0(%rax)
  40:	4c 8b 48 28          	mov    0x28(%rax),%r9
  44:	48 8b 40 30          	mov    0x30(%rax),%rax
  48:	48 83 f8 01          	cmp    $0x1,%rax
  4c:	76 0b                	jbe    59 <do_relocs+0x59>
  4e:	4e 8d 4c 08 ff       	lea    -0x1(%rax,%r9,1),%r9
  53:	48 f7 d8             	neg    %rax
  56:	49 21 c1             	and    %rax,%r9
  59:	4d 85 c9             	test   %r9,%r9
  5c:	74 4e                	je     ac <do_relocs+0xac>
  5e:	48 8b 46 10          	mov    0x10(%rsi),%rax
  62:	48 03 43 08          	add    0x8(%rbx),%rax
  66:	4c 29 c8             	sub    %r9,%rax
  69:	49 89 03             	mov    %rax,(%r11)
  6c:	49 83 c0 01          	add    $0x1,%r8
  70:	48 83 c6 18          	add    $0x18,%rsi
  74:	49 39 c8             	cmp    %rcx,%r8
  77:	75 a7                	jne    20 <do_relocs+0x20>
  79:	5b                   	pop    %rbx
  7a:	31 c0                	xor    %eax,%eax
  7c:	5d                   	pop    %rbp
  7d:	c3                   	retq   
  7e:	66 90                	xchg   %ax,%ax
  80:	49 c1 e9 20          	shr    $0x20,%r9
  84:	4b 8d 04 49          	lea    (%r9,%r9,2),%rax
  88:	48 8d 1c c2          	lea    (%rdx,%rax,8),%rbx
  8c:	0f b6 43 04          	movzbl 0x4(%rbx),%eax
  90:	c0 e8 04             	shr    $0x4,%al
  93:	3c 02                	cmp    $0x2,%al
  95:	0f 84 e5 00 00 00    	je     180 <do_relocs+0x180>
  9b:	48 85 ff             	test   %rdi,%rdi
  9e:	74 0c                	je     ac <do_relocs+0xac>
  a0:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
  a6:	0f 84 44 01 00 00    	je     1f0 <do_relocs+0x1f0>
  ac:	5b                   	pop    %rbx
  ad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  b2:	5d                   	pop    %rbp
  b3:	c3                   	retq   
  b4:	0f 1f 40 00          	nopl   0x0(%rax)
  b8:	49 c1 e9 20          	shr    $0x20,%r9
  bc:	4b 8d 04 49          	lea    (%r9,%r9,2),%rax
  c0:	4c 8d 0c c2          	lea    (%rdx,%rax,8),%r9
  c4:	41 0f b6 41 04       	movzbl 0x4(%r9),%eax
  c9:	c0 e8 04             	shr    $0x4,%al
  cc:	3c 02                	cmp    $0x2,%al
  ce:	49 8b 41 08          	mov    0x8(%r9),%rax
  d2:	0f 84 f0 00 00 00    	je     1c8 <do_relocs+0x1c8>
  d8:	48 03 46 10          	add    0x10(%rsi),%rax
  dc:	49 83 c0 01          	add    $0x1,%r8
  e0:	48 83 c6 18          	add    $0x18,%rsi
  e4:	49 39 c8             	cmp    %rcx,%r8
  e7:	49 89 03             	mov    %rax,(%r11)
  ea:	0f 85 30 ff ff ff    	jne    20 <do_relocs+0x20>
  f0:	eb 87                	jmp    79 <do_relocs+0x79>
  f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  f8:	49 83 c0 01          	add    $0x1,%r8
  fc:	48 83 c6 18          	add    $0x18,%rsi
 100:	49 c7 03 01 00 00 00 	movq   $0x1,(%r11)
 107:	49 39 c8             	cmp    %rcx,%r8
 10a:	0f 85 10 ff ff ff    	jne    20 <do_relocs+0x20>
 110:	e9 64 ff ff ff       	jmpq   79 <do_relocs+0x79>
 115:	0f 1f 00             	nopl   (%rax)
 118:	48 89 f8             	mov    %rdi,%rax
 11b:	48 03 46 10          	add    0x10(%rsi),%rax
 11f:	49 83 c0 01          	add    $0x1,%r8
 123:	48 83 c6 18          	add    $0x18,%rsi
 127:	49 39 c8             	cmp    %rcx,%r8
 12a:	49 89 03             	mov    %rax,(%r11)
 12d:	0f 85 ed fe ff ff    	jne    20 <do_relocs+0x20>
 133:	e9 41 ff ff ff       	jmpq   79 <do_relocs+0x79>
 138:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 13f:	00 
 140:	49 c1 e9 20          	shr    $0x20,%r9
 144:	4b 8d 04 49          	lea    (%r9,%r9,2),%rax
 148:	4c 8d 0c c2          	lea    (%rdx,%rax,8),%r9
 14c:	41 0f b6 41 04       	movzbl 0x4(%r9),%eax
 151:	c0 e8 04             	shr    $0x4,%al
 154:	3c 02                	cmp    $0x2,%al
 156:	49 8b 41 08          	mov    0x8(%r9),%rax
 15a:	74 4c                	je     1a8 <do_relocs+0x1a8>
 15c:	49 89 f9             	mov    %rdi,%r9
 15f:	4c 03 4e 10          	add    0x10(%rsi),%r9
 163:	49 83 c0 01          	add    $0x1,%r8
 167:	48 83 c6 18          	add    $0x18,%rsi
 16b:	4c 01 c8             	add    %r9,%rax
 16e:	49 39 c8             	cmp    %rcx,%r8
 171:	49 89 03             	mov    %rax,(%r11)
 174:	0f 85 a6 fe ff ff    	jne    20 <do_relocs+0x20>
 17a:	e9 fa fe ff ff       	jmpq   79 <do_relocs+0x79>
 17f:	90                   	nop
 180:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
 185:	0f 85 10 ff ff ff    	jne    9b <do_relocs+0x9b>
 18b:	49 83 c0 01          	add    $0x1,%r8
 18f:	48 83 c6 18          	add    $0x18,%rsi
 193:	49 39 c8             	cmp    %rcx,%r8
 196:	0f 85 84 fe ff ff    	jne    20 <do_relocs+0x20>
 19c:	e9 d8 fe ff ff       	jmpq   79 <do_relocs+0x79>
 1a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 1a8:	48 85 c0             	test   %rax,%rax
 1ab:	75 af                	jne    15c <do_relocs+0x15c>
 1ad:	49 83 c0 01          	add    $0x1,%r8
 1b1:	48 83 c6 18          	add    $0x18,%rsi
 1b5:	49 39 c8             	cmp    %rcx,%r8
 1b8:	0f 85 62 fe ff ff    	jne    20 <do_relocs+0x20>
 1be:	e9 b6 fe ff ff       	jmpq   79 <do_relocs+0x79>
 1c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 1c8:	48 85 c0             	test   %rax,%rax
 1cb:	0f 85 07 ff ff ff    	jne    d8 <do_relocs+0xd8>
 1d1:	49 83 c0 01          	add    $0x1,%r8
 1d5:	48 83 c6 18          	add    $0x18,%rsi
 1d9:	49 39 c8             	cmp    %rcx,%r8
 1dc:	0f 85 3e fe ff ff    	jne    20 <do_relocs+0x20>
 1e2:	e9 92 fe ff ff       	jmpq   79 <do_relocs+0x79>
 1e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 1ee:	00 00 
 1f0:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
 1f5:	0f 85 b1 fe ff ff    	jne    ac <do_relocs+0xac>
 1fb:	48 89 fd             	mov    %rdi,%rbp
 1fe:	48 03 6f 20          	add    0x20(%rdi),%rbp
 202:	48 85 ed             	test   %rbp,%rbp
 205:	48 89 e8             	mov    %rbp,%rax
 208:	0f 84 9e fe ff ff    	je     ac <do_relocs+0xac>
 20e:	44 0f b7 4f 38       	movzwl 0x38(%rdi),%r9d
 213:	45 85 c9             	test   %r9d,%r9d
 216:	0f 84 90 fe ff ff    	je     ac <do_relocs+0xac>
 21c:	83 7d 00 07          	cmpl   $0x7,0x0(%rbp)
 220:	0f 84 1a fe ff ff    	je     40 <do_relocs+0x40>
 226:	41 83 e9 01          	sub    $0x1,%r9d
 22a:	4a 8d 2c cd 00 00 00 	lea    0x0(,%r9,8),%rbp
 231:	00 
 232:	49 c1 e1 06          	shl    $0x6,%r9
 236:	49 29 e9             	sub    %rbp,%r9
 239:	4e 8d 4c 08 38       	lea    0x38(%rax,%r9,1),%r9
 23e:	eb 09                	jmp    249 <do_relocs+0x249>
 240:	83 38 07             	cmpl   $0x7,(%rax)
 243:	0f 84 f7 fd ff ff    	je     40 <do_relocs+0x40>
 249:	48 83 c0 38          	add    $0x38,%rax
 24d:	4c 39 c8             	cmp    %r9,%rax
 250:	75 ee                	jne    240 <do_relocs+0x240>
 252:	e9 55 fe ff ff       	jmpq   ac <do_relocs+0xac>
 257:	31 c0                	xor    %eax,%eax
 259:	c3                   	retq   
 25a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000260 <relocate_enclave>:
 260:	41 57                	push   %r15
 262:	41 56                	push   %r14
 264:	41 55                	push   %r13
 266:	49 89 fd             	mov    %rdi,%r13
 269:	41 54                	push   %r12
 26b:	55                   	push   %rbp
 26c:	53                   	push   %rbx
 26d:	48 83 ec 10          	sub    $0x10,%rsp
 271:	48 85 ff             	test   %rdi,%rdi
 274:	74 08                	je     27e <relocate_enclave+0x1e>
 276:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
 27c:	74 14                	je     292 <relocate_enclave+0x32>
 27e:	48 83 c4 10          	add    $0x10,%rsp
 282:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 287:	5b                   	pop    %rbx
 288:	5d                   	pop    %rbp
 289:	41 5c                	pop    %r12
 28b:	41 5d                	pop    %r13
 28d:	41 5e                	pop    %r14
 28f:	41 5f                	pop    %r15
 291:	c3                   	retq   
 292:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
 297:	75 e5                	jne    27e <relocate_enclave+0x1e>
 299:	48 89 fb             	mov    %rdi,%rbx
 29c:	48 03 5f 20          	add    0x20(%rdi),%rbx
 2a0:	74 dc                	je     27e <relocate_enclave+0x1e>
 2a2:	66 83 7f 38 00       	cmpw   $0x0,0x38(%rdi)
 2a7:	0f 84 13 01 00 00    	je     3c0 <relocate_enclave+0x160>
 2ad:	31 ed                	xor    %ebp,%ebp
 2af:	4c 8d 25 00 00 00 00 	lea    0x0(%rip),%r12        # 2b6 <relocate_enclave+0x56>
 2b6:	eb 1c                	jmp    2d4 <relocate_enclave+0x74>
 2b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 2bf:	00 
 2c0:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
 2c5:	83 c5 01             	add    $0x1,%ebp
 2c8:	48 83 c3 38          	add    $0x38,%rbx
 2cc:	39 e8                	cmp    %ebp,%eax
 2ce:	0f 86 ec 00 00 00    	jbe    3c0 <relocate_enclave+0x160>
 2d4:	83 3b 02             	cmpl   $0x2,(%rbx)
 2d7:	75 e7                	jne    2c0 <relocate_enclave+0x60>
 2d9:	48 8b 53 20          	mov    0x20(%rbx),%rdx
 2dd:	4d 89 e9             	mov    %r13,%r9
 2e0:	4c 03 4b 18          	add    0x18(%rbx),%r9
 2e4:	48 c1 ea 04          	shr    $0x4,%rdx
 2e8:	48 85 d2             	test   %rdx,%rdx
 2eb:	74 d3                	je     2c0 <relocate_enclave+0x60>
 2ed:	4d 8b 01             	mov    (%r9),%r8
 2f0:	4d 85 c0             	test   %r8,%r8
 2f3:	74 cb                	je     2c0 <relocate_enclave+0x60>
 2f5:	45 31 d2             	xor    %r10d,%r10d
 2f8:	45 31 f6             	xor    %r14d,%r14d
 2fb:	31 c0                	xor    %eax,%eax
 2fd:	45 31 db             	xor    %r11d,%r11d
 300:	31 f6                	xor    %esi,%esi
 302:	45 31 ff             	xor    %r15d,%r15d
 305:	31 ff                	xor    %edi,%edi
 307:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 30e:	00 00 
 310:	49 83 f8 17          	cmp    $0x17,%r8
 314:	77 12                	ja     328 <relocate_enclave+0xc8>
 316:	4f 63 04 84          	movslq (%r12,%r8,4),%r8
 31a:	4d 01 e0             	add    %r12,%r8
 31d:	41 ff e0             	jmpq   *%r8
 320:	4d 8b 59 08          	mov    0x8(%r9),%r11
 324:	0f 1f 40 00          	nopl   0x0(%rax)
 328:	48 83 c7 01          	add    $0x1,%rdi
 32c:	49 83 c1 10          	add    $0x10,%r9
 330:	48 39 d7             	cmp    %rdx,%rdi
 333:	74 08                	je     33d <relocate_enclave+0xdd>
 335:	4d 8b 01             	mov    (%r9),%r8
 338:	4d 85 c0             	test   %r8,%r8
 33b:	75 d3                	jne    310 <relocate_enclave+0xb0>
 33d:	48 85 f6             	test   %rsi,%rsi
 340:	0f 84 e2 00 00 00    	je     428 <relocate_enclave+0x1c8>
 346:	4d 85 f6             	test   %r14,%r14
 349:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
 34e:	4c 89 1c 24          	mov    %r11,(%rsp)
 352:	0f 84 26 ff ff ff    	je     27e <relocate_enclave+0x1e>
 358:	31 d2                	xor    %edx,%edx
 35a:	4c 89 ef             	mov    %r13,%rdi
 35d:	49 f7 f6             	div    %r14
 360:	4c 89 fa             	mov    %r15,%rdx
 363:	48 89 c1             	mov    %rax,%rcx
 366:	e8 95 fc ff ff       	callq  0 <do_relocs>
 36b:	85 c0                	test   %eax,%eax
 36d:	4c 8b 1c 24          	mov    (%rsp),%r11
 371:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
 376:	0f 85 02 ff ff ff    	jne    27e <relocate_enclave+0x1e>
 37c:	4d 85 db             	test   %r11,%r11
 37f:	0f 84 3b ff ff ff    	je     2c0 <relocate_enclave+0x60>
 385:	0f 1f 00             	nopl   (%rax)
 388:	4c 89 d0             	mov    %r10,%rax
 38b:	31 d2                	xor    %edx,%edx
 38d:	4c 89 de             	mov    %r11,%rsi
 390:	49 f7 f6             	div    %r14
 393:	4c 89 ef             	mov    %r13,%rdi
 396:	4c 89 fa             	mov    %r15,%rdx
 399:	48 89 c1             	mov    %rax,%rcx
 39c:	e8 5f fc ff ff       	callq  0 <do_relocs>
 3a1:	85 c0                	test   %eax,%eax
 3a3:	0f 85 d5 fe ff ff    	jne    27e <relocate_enclave+0x1e>
 3a9:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
 3ae:	83 c5 01             	add    $0x1,%ebp
 3b1:	48 83 c3 38          	add    $0x38,%rbx
 3b5:	39 e8                	cmp    %ebp,%eax
 3b7:	0f 87 17 ff ff ff    	ja     2d4 <relocate_enclave+0x74>
 3bd:	0f 1f 00             	nopl   (%rax)
 3c0:	48 83 c4 10          	add    $0x10,%rsp
 3c4:	31 c0                	xor    %eax,%eax
 3c6:	5b                   	pop    %rbx
 3c7:	5d                   	pop    %rbp
 3c8:	41 5c                	pop    %r12
 3ca:	41 5d                	pop    %r13
 3cc:	41 5e                	pop    %r14
 3ce:	41 5f                	pop    %r15
 3d0:	c3                   	retq   
 3d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 3d8:	4d 8b 79 08          	mov    0x8(%r9),%r15
 3dc:	e9 47 ff ff ff       	jmpq   328 <relocate_enclave+0xc8>
 3e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 3e8:	4d 8b 51 08          	mov    0x8(%r9),%r10
 3ec:	e9 37 ff ff ff       	jmpq   328 <relocate_enclave+0xc8>
 3f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 3f8:	49 8b 41 08          	mov    0x8(%r9),%rax
 3fc:	e9 27 ff ff ff       	jmpq   328 <relocate_enclave+0xc8>
 401:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 408:	49 8b 71 08          	mov    0x8(%r9),%rsi
 40c:	e9 17 ff ff ff       	jmpq   328 <relocate_enclave+0xc8>
 411:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 418:	4d 8b 71 08          	mov    0x8(%r9),%r14
 41c:	e9 07 ff ff ff       	jmpq   328 <relocate_enclave+0xc8>
 421:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 428:	4d 85 db             	test   %r11,%r11
 42b:	0f 84 8f fe ff ff    	je     2c0 <relocate_enclave+0x60>
 431:	4d 85 f6             	test   %r14,%r14
 434:	0f 85 4e ff ff ff    	jne    388 <relocate_enclave+0x128>
 43a:	e9 3f fe ff ff       	jmpq   27e <relocate_enclave+0x1e>
 43f:	90                   	nop

0000000000000440 <elf_tls_info>:
 440:	48 85 ff             	test   %rdi,%rdi
 443:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 448:	74 08                	je     452 <elf_tls_info+0x12>
 44a:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
 450:	74 06                	je     458 <elf_tls_info+0x18>
 452:	f3 c3                	repz retq 
 454:	0f 1f 40 00          	nopl   0x0(%rax)
 458:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
 45d:	75 f3                	jne    452 <elf_tls_info+0x12>
 45f:	48 89 f9             	mov    %rdi,%rcx
 462:	48 03 4f 20          	add    0x20(%rdi),%rcx
 466:	48 85 f6             	test   %rsi,%rsi
 469:	74 6e                	je     4d9 <elf_tls_info+0x99>
 46b:	48 85 d2             	test   %rdx,%rdx
 46e:	74 69                	je     4d9 <elf_tls_info+0x99>
 470:	48 85 c9             	test   %rcx,%rcx
 473:	74 dd                	je     452 <elf_tls_info+0x12>
 475:	0f b7 47 38          	movzwl 0x38(%rdi),%eax
 479:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
 480:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
 487:	85 c0                	test   %eax,%eax
 489:	74 33                	je     4be <elf_tls_info+0x7e>
 48b:	83 39 07             	cmpl   $0x7,(%rcx)
 48e:	74 38                	je     4c8 <elf_tls_info+0x88>
 490:	83 e8 01             	sub    $0x1,%eax
 493:	4c 8d 04 c5 00 00 00 	lea    0x0(,%rax,8),%r8
 49a:	00 
 49b:	48 c1 e0 06          	shl    $0x6,%rax
 49f:	4c 29 c0             	sub    %r8,%rax
 4a2:	48 8d 44 01 38       	lea    0x38(%rcx,%rax,1),%rax
 4a7:	eb 0c                	jmp    4b5 <elf_tls_info+0x75>
 4a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 4b0:	83 39 07             	cmpl   $0x7,(%rcx)
 4b3:	74 13                	je     4c8 <elf_tls_info+0x88>
 4b5:	48 83 c1 38          	add    $0x38,%rcx
 4b9:	48 39 c1             	cmp    %rax,%rcx
 4bc:	75 f2                	jne    4b0 <elf_tls_info+0x70>
 4be:	31 c0                	xor    %eax,%eax
 4c0:	c3                   	retq   
 4c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 4c8:	48 03 79 10          	add    0x10(%rcx),%rdi
 4cc:	48 89 3e             	mov    %rdi,(%rsi)
 4cf:	48 8b 41 20          	mov    0x20(%rcx),%rax
 4d3:	48 89 02             	mov    %rax,(%rdx)
 4d6:	31 c0                	xor    %eax,%eax
 4d8:	c3                   	retq   
 4d9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 4de:	c3                   	retq   
 4df:	90                   	nop

00000000000004e0 <elf_get_init_array>:
 4e0:	48 85 ff             	test   %rdi,%rdi
 4e3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 4e8:	74 08                	je     4f2 <elf_get_init_array+0x12>
 4ea:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
 4f0:	74 02                	je     4f4 <elf_get_init_array+0x14>
 4f2:	f3 c3                	repz retq 
 4f4:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
 4f9:	75 f7                	jne    4f2 <elf_get_init_array+0x12>
 4fb:	49 89 f9             	mov    %rdi,%r9
 4fe:	4c 03 4f 20          	add    0x20(%rdi),%r9
 502:	48 85 f6             	test   %rsi,%rsi
 505:	0f 84 a8 00 00 00    	je     5b3 <elf_get_init_array+0xd3>
 50b:	48 85 d2             	test   %rdx,%rdx
 50e:	0f 84 9f 00 00 00    	je     5b3 <elf_get_init_array+0xd3>
 514:	4d 85 c9             	test   %r9,%r9
 517:	74 d9                	je     4f2 <elf_get_init_array+0x12>
 519:	0f b7 47 38          	movzwl 0x38(%rdi),%eax
 51d:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
 524:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
 52b:	66 85 c0             	test   %ax,%ax
 52e:	0f 84 7c 00 00 00    	je     5b0 <elf_get_init_array+0xd0>
 534:	83 e8 01             	sub    $0x1,%eax
 537:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
 53e:	00 
 53f:	48 c1 e0 06          	shl    $0x6,%rax
 543:	48 29 c8             	sub    %rcx,%rax
 546:	4d 8d 5c 01 38       	lea    0x38(%r9,%rax,1),%r11
 54b:	eb 0c                	jmp    559 <elf_get_init_array+0x79>
 54d:	0f 1f 00             	nopl   (%rax)
 550:	49 83 c1 38          	add    $0x38,%r9
 554:	4d 39 d9             	cmp    %r11,%r9
 557:	74 57                	je     5b0 <elf_get_init_array+0xd0>
 559:	41 83 39 02          	cmpl   $0x2,(%r9)
 55d:	75 f1                	jne    550 <elf_get_init_array+0x70>
 55f:	4d 8b 51 20          	mov    0x20(%r9),%r10
 563:	48 89 f8             	mov    %rdi,%rax
 566:	49 03 41 18          	add    0x18(%r9),%rax
 56a:	49 c1 ea 04          	shr    $0x4,%r10
 56e:	4d 85 d2             	test   %r10,%r10
 571:	74 dd                	je     550 <elf_get_init_array+0x70>
 573:	31 c9                	xor    %ecx,%ecx
 575:	eb 23                	jmp    59a <elf_get_init_array+0xba>
 577:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 57e:	00 00 
 580:	49 83 f8 1b          	cmp    $0x1b,%r8
 584:	75 07                	jne    58d <elf_get_init_array+0xad>
 586:	4c 8b 40 08          	mov    0x8(%rax),%r8
 58a:	4c 89 02             	mov    %r8,(%rdx)
 58d:	48 83 c1 01          	add    $0x1,%rcx
 591:	48 83 c0 10          	add    $0x10,%rax
 595:	4c 39 d1             	cmp    %r10,%rcx
 598:	74 b6                	je     550 <elf_get_init_array+0x70>
 59a:	4c 8b 00             	mov    (%rax),%r8
 59d:	49 83 f8 19          	cmp    $0x19,%r8
 5a1:	75 dd                	jne    580 <elf_get_init_array+0xa0>
 5a3:	4c 8b 40 08          	mov    0x8(%rax),%r8
 5a7:	4c 89 06             	mov    %r8,(%rsi)
 5aa:	eb e1                	jmp    58d <elf_get_init_array+0xad>
 5ac:	0f 1f 40 00          	nopl   0x0(%rax)
 5b0:	31 c0                	xor    %eax,%eax
 5b2:	c3                   	retq   
 5b3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 5b8:	c3                   	retq   

global_init.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <__cxa_atexit>:
   0:	31 c0                	xor    %eax,%eax
   2:	c3                   	retq   
   3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
   a:	84 00 00 00 00 00 

0000000000000010 <init_global_object>:
  10:	55                   	push   %rbp
  11:	53                   	push   %rbx
  12:	48 83 ec 18          	sub    $0x18,%rsp
  16:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 1d <init_global_object+0xd>
  1d:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  22:	48 89 e6             	mov    %rsp,%rsi
  25:	e8 00 00 00 00       	callq  2a <init_global_object+0x1a>
  2a:	48 8b 1c 24          	mov    (%rsp),%rbx
  2e:	48 85 db             	test   %rbx,%rbx
  31:	74 28                	je     5b <init_global_object+0x4b>
  33:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
  38:	48 85 ed             	test   %rbp,%rbp
  3b:	74 1e                	je     5b <init_global_object+0x4b>
  3d:	48 03 1d 00 00 00 00 	add    0x0(%rip),%rbx        # 44 <init_global_object+0x34>
  44:	48 83 e5 f8          	and    $0xfffffffffffffff8,%rbp
  48:	48 01 dd             	add    %rbx,%rbp
  4b:	48 39 eb             	cmp    %rbp,%rbx
  4e:	73 0b                	jae    5b <init_global_object+0x4b>
  50:	ff 13                	callq  *(%rbx)
  52:	48 83 c3 08          	add    $0x8,%rbx
  56:	48 39 dd             	cmp    %rbx,%rbp
  59:	77 f5                	ja     50 <init_global_object+0x40>
  5b:	48 83 c4 18          	add    $0x18,%rsp
  5f:	5b                   	pop    %rbx
  60:	5d                   	pop    %rbp
  61:	c3                   	retq   
  62:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  69:	1f 84 00 00 00 00 00 

0000000000000070 <init_stack_guard>:
  70:	48 83 ec 08          	sub    $0x8,%rsp
  74:	e8 00 00 00 00       	callq  79 <init_stack_guard+0x9>
  79:	48 8d 78 28          	lea    0x28(%rax),%rdi
  7d:	be 08 00 00 00       	mov    $0x8,%esi
  82:	e8 00 00 00 00       	callq  87 <init_stack_guard+0x17>
  87:	85 c0                	test   %eax,%eax
  89:	75 05                	jne    90 <init_stack_guard+0x20>
  8b:	48 83 c4 08          	add    $0x8,%rsp
  8f:	c3                   	retq   
  90:	e8 00 00 00 00       	callq  95 <init_stack_guard+0x25>

metadata_sec.o:     file format elf64-x86-64


setcontext.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <_Ux86_64_setcontext>:
   0:	4c 8b 87 a8 01 00 00 	mov    0x1a8(%rdi),%r8
   7:	41 d9 20             	fldenv (%r8)
   a:	41 0f ae 50 18       	ldmxcsr 0x18(%r8)
   f:	4c 8b 47 28          	mov    0x28(%rdi),%r8
  13:	4c 8b 4f 30          	mov    0x30(%rdi),%r9
  17:	48 8b 9f 80 00 00 00 	mov    0x80(%rdi),%rbx
  1e:	48 8b 6f 78          	mov    0x78(%rdi),%rbp
  22:	4c 8b 67 48          	mov    0x48(%rdi),%r12
  26:	4c 8b 6f 50          	mov    0x50(%rdi),%r13
  2a:	4c 8b 77 58          	mov    0x58(%rdi),%r14
  2e:	4c 8b 7f 60          	mov    0x60(%rdi),%r15
  32:	48 8b 77 70          	mov    0x70(%rdi),%rsi
  36:	48 8b 97 88 00 00 00 	mov    0x88(%rdi),%rdx
  3d:	48 8b 87 90 00 00 00 	mov    0x90(%rdi),%rax
  44:	48 8b 8f 98 00 00 00 	mov    0x98(%rdi),%rcx
  4b:	48 8b a7 a0 00 00 00 	mov    0xa0(%rdi),%rsp
  52:	48 8b 8f a8 00 00 00 	mov    0xa8(%rdi),%rcx
  59:	51                   	push   %rcx
  5a:	48 8b 8f 98 00 00 00 	mov    0x98(%rdi),%rcx
  61:	48 8b 7f 68          	mov    0x68(%rdi),%rdi
  65:	c3                   	retq   

tls_support.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <__tls_get_addr>:
   0:	53                   	push   %rbx
   1:	48 89 fb             	mov    %rdi,%rbx
   4:	e8 00 00 00 00       	callq  9 <__tls_get_addr+0x9>
   9:	48 8b 40 50          	mov    0x50(%rax),%rax
   d:	48 03 43 08          	add    0x8(%rbx),%rax
  11:	5b                   	pop    %rbx
  12:	c3                   	retq   
